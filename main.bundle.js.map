{"version":3,"sources":["/Users/marinaro/Documents/B4YGitHub/ng2-tree/index.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/demo/$_lazy_route_resource lazy","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/demo/app/app.component.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/demo/app/app.module.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/demo/app/button.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/demo/environments/environment.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/demo/main.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/draggable/captured-node.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/draggable/draggable.events.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/draggable/node-draggable.directive.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/draggable/node-draggable.service.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/editable/editable.events.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/editable/node-editable.directive.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/menu/menu.events.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/menu/node-menu.component.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/menu/node-menu.service.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/rxjs-imports.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree-controller.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree-internal.component.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree.component.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree.events.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree.module.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree.service.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree.types.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/utils/event.utils.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/utils/fn.utils.ts","/Users/marinaro/Documents/B4YGitHub/ng2-tree/src/utils/safe-html.pipe.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {\n  TreeModel,\n  TreeModelSettings,\n  Ng2TreeSettings,\n  RenamableNode,\n  FoldingType,\n  ChildrenLoadingFunction\n} from './src/tree.types';\n\nimport { Tree } from './src/tree';\n\nimport { NodeMenuItemAction, NodeMenuEvent } from './src/menu/menu.events';\nimport { NodeMenuItem } from './src/menu/node-menu.component';\n\nimport {\n  NodeEvent,\n  NodeCreatedEvent,\n  NodeRemovedEvent,\n  NodeRenamedEvent,\n  NodeMovedEvent,\n  NodeSelectedEvent,\n  NodeExpandedEvent,\n  NodeCollapsedEvent,\n  MenuItemSelectedEvent,\n  NodeDestructiveEvent,\n  NodeUncheckedEvent,\n  NodeCheckedEvent,\n  NodeIndeterminedEvent,\n  NodeUnselectedEvent\n} from './src/tree.events';\n\nimport { TreeComponent } from './src/tree.component';\nimport { TreeController } from './src/tree-controller';\nimport { TreeModule } from './src/tree.module';\n\nexport {\n  Tree,\n  TreeModel,\n  TreeModelSettings,\n  Ng2TreeSettings,\n  RenamableNode,\n  FoldingType,\n  NodeEvent,\n  NodeCreatedEvent,\n  NodeRemovedEvent,\n  NodeRenamedEvent,\n  NodeMovedEvent,\n  NodeSelectedEvent,\n  NodeExpandedEvent,\n  NodeCollapsedEvent,\n  NodeDestructiveEvent,\n  NodeMenuEvent,\n  NodeUncheckedEvent,\n  NodeCheckedEvent,\n  NodeIndeterminedEvent,\n  NodeUnselectedEvent,\n  TreeComponent,\n  TreeModule,\n  NodeMenuItemAction,\n  NodeMenuItem,\n  ChildrenLoadingFunction,\n  MenuItemSelectedEvent,\n  TreeController\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/index.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/demo/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/demo/$$_lazy_route_resource lazy\n// module id = ../../../../../src/demo/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Ng2TreeSettings, NodeEvent, RenamableNode, TreeModel } from '../../../index';\nimport { NodeMenuItemAction } from '../../menu/menu.events';\nimport { MenuItemSelectedEvent } from '../../tree.events';\n\ndeclare const alertify: any;\n\n@Component({\n  selector: 'app',\n  template: `\n    <div class=\"tree-demo-app\">\n        <div class=\"tree-container\">\n            <div class=\"tree-info\">\n                <p class=\"tree-title\">Fonts tree</p>\n            </div>\n            <div class=\"tree-content\">\n                <tree #treeFonts\n                      [tree]=\"fonts\"\n                      [settings]=\"{rootIsVisible: false}\"\n                      (menuItemSelected)=\"onMenuItemSelected($event)\"\n                      (nodeRemoved)=\"onNodeRemoved($event)\"\n                      (nodeRenamed)=\"onNodeRenamed($event)\"\n                      (nodeSelected)=\"onNodeSelected($event)\"\n                      (nodeMoved)=\"onNodeMoved($event)\"\n                      (nodeCreated)=\"onNodeCreated($event)\"\n                      (nodeExpanded)=\"onNodeExpanded($event)\"\n                      (nodeCollapsed)=\"onNodeCollapsed($event)\">\n                </tree>\n            </div>\n        </div>\n        <div class=\"tree-container\">\n            <div class=\"tree-info\">\n                <p class=\"tree-title\">Programming languages tree</p>\n                <p class=\"notice\">this tree is loaded asynchronously</p>\n            </div>\n            <div class=\"tree-content\">\n                <tree [tree]=\"pls\"\n                      [settings]=\"disabledCheckboxesSettings\"\n                      (nodeRemoved)=\"onNodeRemoved($event)\"\n                      (nodeRenamed)=\"onNodeRenamed($event)\"\n                      (nodeSelected)=\"onNodeSelected($event)\"\n                      (nodeMoved)=\"onNodeMoved($event)\"\n                      (nodeCreated)=\"onNodeCreated($event)\">\n                </tree>\n            </div>\n        </div>\n        <div class=\"tree-container tree-container--with-controls\">\n            <div class=\"tree-info\">\n                <p class=\"tree-title\">Directory/File structure</p>\n                <p class=\"notice\">this tree has advanced configurations</p>\n            </div>\n            <div class=\"tree-content\">\n                <tree #treeFFS\n                      [tree]=\"ffs\"\n                      (nodeRemoved)=\"onNodeRemoved($event)\"\n                      (nodeRenamed)=\"onNodeRenamed($event)\"\n                      (nodeSelected)=\"onNodeSelected($event)\"\n                      (nodeUnselected)=\"onNodeUnselected($event)\"\n                      (nodeMoved)=\"onNodeMoved($event)\"\n                      (nodeCreated)=\"onNodeFFSCreated($event)\"\n                      (nodeExpanded)=\"onNodeExpanded($event)\"\n                      (nodeCollapsed)=\"onNodeCollapsed($event)\"\n                      [settings]=\"settings\">\n                </tree>\n            </div>\n\n            <div class=\"tree-controlls\">\n                <p class=\"notice\">Tree API exposed via TreeController</p>\n                <button button (click)=\"handleActionOnFFS(21, 'expandToParent')\">Select 'unicode.pf2' up to root</button>\n                <button button (click)=\"handleActionOnFFS(13, 'select')\">Select 'boot' node</button>\n                <button button (click)=\"handleActionOnFFS(13, 'unselect')\">Unselect 'boot' node</button>\n                <button button (click)=\"handleActionOnFFS(13, 'allowSelection')\">Allow selection of the 'boot' node</button>\n                <button button (click)=\"handleActionOnFFS(13, 'forbidSelection')\">Forbid selection of the 'boot' node</button>\n                <button button (click)=\"handleActionOnFFS(2, 'collapse')\">Collapse 'bin' node</button>\n                <button button (click)=\"handleActionOnFFS(2, 'expand')\">Expand 'bin' node</button>\n                <button button (click)=\"renameFFS(21)\">Rename 'unicode.pf2' to 'unicode.pf'</button>\n                <button button (click)=\"handleActionOnFFS(12, 'remove')\">Remove 'nano'</button>\n                <button button (click)=\"handleActionOnFFS(52, 'reloadChildren')\">Reload Music's children</button>\n                <button button (click)=\"setChildrenFFS(36)\">Set 'etc' children</button>\n                <button button (click)=\"addChildFFS(2, {value: 'ping'})\">Add a child with name 'ping' to 'bin'</button>\n                <button button (click)=\"addChildFFS(22, {value: 'lost'})\">Add a child with name 'lost' to 'lost+found'</button>\n                <button button (click)=\"addChildFFS(22, {value: 'found', children: []})\">Add a child with name 'found' to 'lost+found'</button>\n                <button button (click)=\"addChildFFS(36, {value: 'found', children: []})\">Add a child with name 'found' to 'etc'</button>\n                <button button (click)=\"addChildFFS(78, {value: 'Voodo People'})\">Add a child with name 'Voodo People' to '2Cellos'</button>\n                <button button (click)=\"checkFolder(52)\">Check Music folder</button>\n                <button button (click)=\"uncheckFolder(52)\">Uncheck Music folder</button>\n            </div>\n        </div>\n        <div class=\"tree-container\">\n            <div class=\"tree-info\">\n                <p class=\"tree-title\">Programming languages tree</p>\n                <p class=\"notice\">this tree is using a custom template</p>\n            </div>\n            <div class=\"tree-content\">\n                <tree [tree]=\"icons\"\n                      [settings]=\"settings\"\n                      (nodeRemoved)=\"onNodeRemoved($event)\"\n                      (nodeRenamed)=\"onNodeRenamed($event)\"\n                      (nodeSelected)=\"onNodeSelected($event)\"\n                      (nodeMoved)=\"onNodeMoved($event)\"\n                      (nodeCreated)=\"onNodeCreated($event)\">\n                    <ng-template let-node>\n                        <i class=\"fa {{node.icon}}\"></i>\n                        <span class=\"node-name\" [innerHTML]=\"node.value\"></span>\n                    </ng-template>\n                </tree>\n            </div>\n        </div>\n        <div>\n            <div class=\"tree-info\">\n                <p class=\"tree-title\">Custom right click GUI tree</p>\n                <p class=\"notice\">this tree is using a custom right click menu</p>\n            </div>\n            <div class=\"tree-content\">\n                <tree [tree]=\"custom\"\n                      (nodeSelected)=\"onNodeSelected($event)\">\n                </tree>\n            </div>\n        </div>\n    </div>\n  `,\n  styles: [\n    `\n    .tree-info {\n        flex: 1 0 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n      }\n\n      .tree-controlls {\n        display: flex;\n        flex-direction: column;\n      }\n\n      .tree-content {\n        display: flex;\n        flex-direction: column;\n      }\n\n      .tree-container {\n        margin-bottom: 20px;\n\n      }\n\n      .tree-container--with-controls {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .tree-demo-app {\n        display: flex;\n        flex-direction: column;\n        margin-bottom:50px;\n      }\n\n      .tree-title {\n        margin: 0;\n        color: #40a070;\n        font-size: 2em;\n      }\n\n      .notice {\n        color: #e91e63;\n        font-size: 1.2em;\n        font-style: italic;\n      }\n\n      :host /deep/ .fa {\n        cursor: pointer;\n      }\n\n      :host /deep/ .fa.disabled {\n        cursor: inherit;\n        color: #757575;\n      }\n\n      .button {\n        border-radius: 4px;\n        box-shadow: 0 2px 4px 0 #888;\n        background-color: #fff;\n        -webkit-appearance: none;\n        border: 1px solid #000;\n        height: 35px;\n        outline: none;\n      }\n\n      .button-pressed {\n        box-shadow: 0 0 1px 0 #888;\n      }\n\n      .tree-controlls button {\n        margin: 5px;\n      }\n  `\n  ]\n})\nexport class AppComponent implements OnInit {\n  public settings: Ng2TreeSettings = {\n    rootIsVisible: false,\n    showCheckboxes: true\n  };\n\n  public disabledCheckboxesSettings: Ng2TreeSettings = {\n    rootIsVisible: false,\n    showCheckboxes: true,\n    enableCheckboxes: true\n  };\n\n  public fonts: TreeModel = {\n    value: 'Fonts',\n    settings: {\n      isCollapsedOnInit: true\n    },\n    children: [\n      {\n        value: 'Serif  -  All my children and I are STATIC ¯\\\\_(ツ)_/¯',\n        id: 1,\n        settings: {\n          static: true\n        },\n        children: [\n          { value: '<a href=\"#\" id=\"antiqua\" class=\"test\">Antiqua</a> with HTML tags.', id: 2 },\n          { value: 'DejaVu Serif', id: 3 },\n          { value: 'Garamond', id: 4 },\n          { value: 'Georgia', id: 5 },\n          { value: 'Times New Roman', id: 6 },\n          {\n            value: 'Slab serif',\n            id: 7,\n            children: [{ value: 'Candida', id: 8 }, { value: 'Swift', id: 9 }, { value: 'Guardian Egyptian', id: 10 }]\n          }\n        ]\n      },\n      {\n        value: 'Sans-serif (Right click me - I have a custom menu)',\n        id: 11,\n        settings: {\n          menuItems: [\n            { action: NodeMenuItemAction.Custom, name: 'Foo', cssClass: 'fa fa-arrow-right' },\n            { action: NodeMenuItemAction.Custom, name: 'Bar', cssClass: 'fa fa-arrow-right' },\n            { action: NodeMenuItemAction.Custom, name: 'Baz', cssClass: 'fa fa-arrow-right' }\n          ]\n        },\n        children: [\n          { value: 'Arial', id: 12 },\n          { value: 'Century Gothic', id: 13 },\n          { value: 'DejaVu Sans', id: 14 },\n          { value: 'Futura', id: 15 },\n          { value: 'Geneva', id: 16 },\n          { value: 'Liberation Sans', id: 17 }\n        ]\n      },\n      {\n        value: 'Monospace - With ASYNC CHILDREN',\n        id: 18,\n        // children property is ignored if \"loadChildren\" is present\n        children: [{ value: 'I am the font that will be ignored' }],\n        loadChildren: callback => {\n          setTimeout(() => {\n            callback([\n              { value: 'Input Mono', id: 19 },\n              { value: 'Roboto Mono', id: 20 },\n              { value: 'Liberation Mono', id: 21 },\n              { value: 'Hack', id: 22 },\n              { value: 'Consolas', id: 23 },\n              { value: 'Menlo', id: 24 },\n              { value: 'Source Code Pro', id: 25 }\n            ]);\n          }, 5000);\n        }\n      }\n    ]\n  };\n\n  @ViewChild('treeFonts') public treeFonts;\n\n  public pls: TreeModel;\n\n  public ffs: TreeModel = {\n    value: '/',\n    id: 1,\n    settings: {\n      cssClasses: {\n        expanded: 'fa fa-caret-down',\n        collapsed: 'fa fa-caret-right',\n        empty: 'fa fa-caret-right disabled',\n        leaf: 'fa'\n      },\n      templates: {\n        node: '<i class=\"fa fa-folder-o\"></i>',\n        leaf: '<i class=\"fa fa-file-o\"></i>'\n      }\n    },\n    children: [\n      {\n        value: 'bin',\n        id: 2,\n        children: [\n          { value: 'bash', id: 3 },\n          { value: 'umount', id: 4 },\n          { value: 'cp', id: 5 },\n          { value: 'less', id: 6 },\n          { value: 'rmdir', id: 7 },\n          { value: 'touch', id: 8 },\n          { value: 'chgrp', id: 9 },\n          { value: 'chmod', id: 10 },\n          { value: 'chown', id: 11 },\n          { value: 'nano', id: 12 }\n        ],\n        settings: {\n          isCollapsedOnInit: true\n        }\n      },\n      {\n        value: 'boot',\n        id: 13,\n        settings: {\n          isCollapsedOnInit: true,\n          keepNodesInDOM: true\n        },\n        children: [\n          {\n            value: 'grub',\n            id: 14,\n            children: [\n              { value: 'fonts', id: 15 },\n              { value: 'gfxblacklist.txt', id: 16 },\n              { value: 'grub.cfg', id: 17 },\n              { value: 'grubenv', id: 18 },\n              { value: 'i386-pc', id: 19 },\n              { value: 'locale', id: 20 },\n              { value: 'unicode.pf2', id: 21 }\n            ]\n          },\n          {\n            value: 'lost+found',\n            id: 22,\n            children: [],\n            settings: {\n              checked: true\n            }\n          },\n          { value: 'abi-4.4.0-57-generic', id: 23 },\n          { value: 'config-4.4.0-57-generic', id: 24 },\n          { value: 'initrd.img-4.4.0-47-generic', id: 25 },\n          { value: 'initrd.img-4.4.0-57-generic', id: 26 },\n          { value: 'memtest86+.bin', id: 27 },\n          { value: 'System.map-4.4.0-57-generic', id: 28 },\n          { value: 'memtest86+.elf', id: 29 },\n          { value: 'vmlinuz-4.4.0-57-generic', id: 30 },\n          { value: 'memtest86+_multiboot.bin', id: 31 }\n        ]\n      },\n      {\n        value: 'build-no-left-no-right-menus',\n        id: 32,\n        settings: {\n          leftMenu: false,\n          rightMenu: false\n        },\n        children: [\n          {\n            value: 'php5-left-menu',\n            id: 33,\n            settings: {\n              leftMenu: true\n            }\n          },\n          {\n            value: 'grails-left-menu',\n            id: 335,\n            settings: {\n              leftMenu: true\n            }\n          },\n          {\n            value: 'python-right-menu',\n            id: 333,\n            settings: {\n              rightMenu: true\n            }\n          }\n        ]\n      },\n      { value: 'cdrom', id: 34, children: [] },\n      { value: 'dev', id: 35, children: [] },\n      {\n        value: 'etc',\n        id: 36,\n        loadChildren: callback => {\n          console.log('callback function called to load etc`s children');\n          setTimeout(() => {\n            callback([\n              { value: 'apache2', id: 82, children: [] },\n              { value: 'nginx', id: 83, children: [] },\n              { value: 'dhcp', id: 84, children: [] },\n              { value: 'dpkg', id: 85, children: [] }\n            ]);\n          });\n        }\n      },\n      {\n        value: 'home',\n        id: 37,\n        children: [\n          {\n            value: 'firstUser',\n            id: 38,\n            children: [\n              {\n                value: 'Documents',\n                id: 39,\n                children: [\n                  {\n                    value: 'home',\n                    id: 40,\n                    children: [\n                      {\n                        value: 'bills',\n                        id: 41,\n                        children: [\n                          { value: '2016-07-01-mobile.pdf', id: 42 },\n                          { value: '2016-07-01-electricity.pdf', id: 43 },\n                          { value: '2016-07-01-water.pdf', id: 44 },\n                          { value: '2016-07-01-internet.pdf', id: 45 },\n                          { value: '2016-08-01-mobile.pdf', id: 46 },\n                          { value: '2016-10-01-internet.pdf', id: 47 }\n                        ]\n                      },\n                      { value: 'photos', id: 48, children: [] }\n                    ]\n                  }\n                ]\n              },\n              { value: 'Downloads', id: 49, children: [] },\n              { value: 'Desktop', id: 50, children: [] },\n              { value: 'Pictures', id: 51, children: [] },\n              {\n                value: 'Music',\n                id: 52,\n                children: [{ value: \"won't be displayed\" }],\n                loadChildren: callback => {\n                  setTimeout(() => {\n                    callback([\n                      { value: '2Cellos', id: 78, children: [] },\n                      { value: 'Michael Jackson', id: 79, children: [] },\n                      { value: 'AC/DC', id: 80, children: [] },\n                      { value: 'Adel', id: 81, children: [] }\n                    ]);\n                  }, 5000);\n                }\n              },\n              { value: 'Public', id: 53, children: [] }\n            ]\n          },\n          {\n            value: 'secondUser - left menu templates',\n            id: 54,\n            settings: {\n              leftMenu: true\n            },\n            children: [\n              { value: 'Documents', id: 55, children: [] },\n              {\n                value: 'Downloads - custom left menu template',\n                id: 56,\n                settings: {\n                  templates: {\n                    leftMenu: '<i class=\"fa fa-navicon\"></i>'\n                  }\n                },\n                children: [\n                  { value: 'Actobat3', id: 57 },\n                  { value: 'Complib', id: 58 },\n                  { value: 'Eudora', id: 59 },\n                  { value: 'java', id: 60 },\n                  { value: 'drivers', id: 61 },\n                  { value: 'kathy', id: 62 }\n                ]\n              },\n              { value: 'Desktop', id: 63, children: [] },\n              { value: 'Pictures', id: 64, children: [] },\n              { value: 'Music', id: 65, children: [] },\n              { value: 'Public', id: 66, children: [] }\n            ]\n          }\n        ]\n      },\n      { value: 'lib', id: 67, children: [] },\n      { value: 'media', id: 68, children: [] },\n      { value: 'opt', id: 69, children: [] },\n      { value: 'proc', id: 70, children: [] },\n      { value: 'root', id: 71, children: [] },\n      { value: 'run', id: 72, children: [] },\n      { value: 'sbin', id: 73, children: [] },\n      { value: 'srv', id: 74, children: [] },\n      { value: 'sys', id: 75, children: [] },\n      { value: 'usr', id: 76, children: [] },\n      { value: 'var', id: 77, children: [] }\n    ]\n  };\n  private lastFFSNodeId = 86;\n\n  @ViewChild('treeFFS') public treeFFS;\n\n  public icons: TreeModel = {\n    value: 'Icons',\n    children: [\n      {\n        value: 'Web Application Icons',\n        children: [\n          { value: 'calendar', icon: 'fa-calendar' },\n          { value: 'download', icon: 'fa-download' },\n          { value: 'group', icon: 'fa-group' },\n          { value: 'print', icon: 'fa-print' }\n        ]\n      },\n      {\n        value: 'Hand Icons',\n        children: [\n          { value: 'pointer', icon: 'fa-hand-pointer-o' },\n          { value: 'grab', icon: 'fa-hand-rock-o' },\n          { value: 'thumbs up', icon: 'fa-thumbs-o-up ' },\n          { value: 'thumbs down', icon: 'fa-thumbs-o-down' }\n        ]\n      },\n      {\n        value: 'File Type Icons',\n        children: [\n          { value: 'file', icon: 'fa-file-o' },\n          { value: 'audio', icon: 'fa-file-audio-o' },\n          { value: 'movie', icon: 'fa-file-movie-o ' },\n          { value: 'archive', icon: 'fa-file-zip-o' }\n        ]\n      }\n    ]\n  };\n\n  public custom: TreeModel = {\n    settings: {\n      menuItems: [\n        { action: NodeMenuItemAction.NewFolder, name: 'Add parent node', cssClass: '' },\n        { action: NodeMenuItemAction.NewTag, name: 'Add child node', cssClass: '' },\n        { action: NodeMenuItemAction.Remove, name: 'Remove node', cssClass: '' },\n        { action: NodeMenuItemAction.Rename, name: 'Rename node', cssClass: '' },\n        { action: NodeMenuItemAction.Custom, name: 'Custom Action', cssClass: '' }\n      ]\n    },\n    value: 'TestParent',\n    children: [{ value: 'TestChild', icon: '' }]\n  };\n\n  private static logEvent(e: NodeEvent, message: string): void {\n    console.log(e);\n    alertify.message(`${message}: ${e.node.value}`);\n  }\n\n  public ngOnInit(): void {\n    setTimeout(() => {\n      this.pls = {\n        value: 'Programming languages by programming paradigm',\n        children: [\n          {\n            value: 'Aspect-oriented programming',\n            settings: {\n              checkedIsVisible: false\n            },\n            children: [{ value: 'AspectJ' }, { value: 'AspectC++' }]\n          },\n          {\n            value: 'Object-oriented programming',\n            children: [\n              {\n                value: {\n                  name: 'Java',\n                  setName(name: string): void {\n                    this.name = name;\n                  },\n                  toString(): string {\n                    return this.name;\n                  }\n                } as RenamableNode\n              },\n              { value: 'C++',\n                settings: {\n                  checkedIsVisible: true\n                } },\n              { value: 'C#' }\n            ]\n          },\n          {\n            value: 'Prototype-based programming',\n            children: [{ value: 'JavaScript' }, { value: 'CoffeeScript' }, { value: 'TypeScript' }]\n          }\n        ]\n      };\n      console.log(this.pls);\n\n    }, 2000);\n  }\n\n  public onNodeRemoved(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Removed');\n  }\n\n  public onNodeMoved(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Moved');\n  }\n\n  public onNodeRenamed(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Renamed');\n  }\n\n  public onNodeCreated(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Created');\n  }\n\n  public onNodeFFSCreated(e: NodeEvent, controller): void {\n    AppComponent.logEvent(e, 'Created');\n    if (controller) {\n      controller.changeNodeId(++this.lastFFSNodeId);\n    }\n  }\n\n  public onNodeSelected(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Selected');\n  }\n\n  public onNodeUnselected(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Unselected');\n  }\n\n  public onMenuItemSelected(e: MenuItemSelectedEvent) {\n    AppComponent.logEvent(e, `You selected ${e.selectedItem} menu item`);\n  }\n\n  public onNodeExpanded(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Expanded');\n  }\n\n  public onNodeCollapsed(e: NodeEvent): void {\n    AppComponent.logEvent(e, 'Collapsed');\n  }\n\n  public handleActionOnFFS(id: number | string, action: string) {\n    const treeController = this.treeFFS.getControllerByNodeId(id);\n    if (treeController && typeof treeController[action] === 'function') {\n      treeController[action]();\n    } else {\n      console.log('There isn`t a controller for a node with id - ' + id);\n    }\n  }\n\n  public renameFFS(id: number | string) {\n    const treeController = this.treeFFS.getControllerByNodeId(id);\n    if (treeController) {\n      treeController.rename('unicode.pf');\n    } else {\n      console.log('There isn`t a controller for a node with id - ' + id);\n    }\n  }\n\n  public setChildrenFFS(id: number | string) {\n    const treeController = this.treeFFS.getControllerByNodeId(id);\n    if (treeController && typeof treeController.setChildren === 'function') {\n      treeController.setChildren([\n        { value: 'apache2', id: 82, children: [] },\n        { value: 'nginx', id: 83, children: [] },\n        { value: 'dhcp', id: 84, children: [] },\n        { value: 'dpkg', id: 85, children: [] },\n        { value: 'gdb', id: 86, children: [] }\n      ]);\n    } else {\n      console.log('There isn`t a controller for a node with id - ' + id);\n    }\n  }\n\n  public addChildFFS(id: number | string, newNode: TreeModel) {\n    newNode.id = ++this.lastFFSNodeId;\n    const treeController = this.treeFFS.getControllerByNodeId(id);\n    if (treeController) {\n      treeController.addChild(newNode);\n    } else {\n      console.log(`Controller is absent for a node with id: ${id}`);\n    }\n  }\n\n  public checkFolder(id: number): void {\n    const treeController = this.treeFFS.getControllerByNodeId(id);\n    if (treeController) {\n      treeController.check();\n    } else {\n      console.log(`Controller is absent for a node with id: ${id}`);\n    }\n  }\n\n  public uncheckFolder(id: number): void {\n    const treeController = this.treeFFS.getControllerByNodeId(id);\n    if (treeController) {\n      treeController.uncheck();\n    } else {\n      console.log(`Controller is absent for a node with id: ${id}`);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/demo/app/app.component.ts","import { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { TreeModule } from '../../../index';\nimport { ButtonDirective } from './button';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AppComponent, ButtonDirective],\n  imports: [BrowserModule, CommonModule, TreeModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/demo/app/app.module.ts","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[button]'\n})\nexport class ButtonDirective {\n  constructor(private el: ElementRef) {\n    el.nativeElement.classList.add('button');\n\n    el.nativeElement.addEventListener('mousedown', e => {\n      el.nativeElement.classList.add('button-pressed');\n    });\n\n    el.nativeElement.addEventListener('mouseup', e => {\n      el.nativeElement.classList.remove('button-pressed');\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/demo/app/button.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/demo/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/demo/main.ts","import { Tree } from '../tree';\nimport { ElementRef } from '@angular/core';\n\nexport class CapturedNode {\n  public constructor(private anElement: ElementRef, private aTree: Tree) {}\n\n  public canBeDroppedAt(element: ElementRef): boolean {\n    return !this.sameAs(element) && !this.contains(element);\n  }\n\n  public contains(other: ElementRef): boolean {\n    return this.element.nativeElement.contains(other.nativeElement);\n  }\n\n  public sameAs(other: ElementRef): boolean {\n    return this.element === other;\n  }\n\n  public get element(): ElementRef {\n    return this.anElement;\n  }\n\n  public get tree(): Tree {\n    return this.aTree;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/draggable/captured-node.ts","import { ElementRef } from '@angular/core';\nimport { CapturedNode } from './captured-node';\n\nexport class NodeDraggableEvent {\n  public constructor(public captured: CapturedNode, public target: ElementRef) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/draggable/draggable.events.ts","import { Directive, ElementRef, Inject, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { NodeDraggableService } from './node-draggable.service';\nimport { CapturedNode } from './captured-node';\nimport { Tree } from '../tree';\n\n@Directive({\n  selector: '[nodeDraggable]'\n})\nexport class NodeDraggableDirective implements OnDestroy, OnInit {\n  public static DATA_TRANSFER_STUB_DATA = 'some browsers enable drag-n-drop only when dataTransfer has data';\n\n  @Input() public nodeDraggable: ElementRef;\n\n  @Input() public tree: Tree;\n\n  private nodeNativeElement: HTMLElement;\n  private disposersForDragListeners: Function[] = [];\n\n  public constructor(\n    @Inject(ElementRef) public element: ElementRef,\n    @Inject(NodeDraggableService) private nodeDraggableService: NodeDraggableService,\n    @Inject(Renderer2) private renderer: Renderer2\n  ) {\n    this.nodeNativeElement = element.nativeElement;\n  }\n\n  public ngOnInit(): void {\n    if (!this.tree.isStatic()) {\n      this.renderer.setAttribute(this.nodeNativeElement, 'draggable', 'true');\n      this.disposersForDragListeners.push(\n        this.renderer.listen(this.nodeNativeElement, 'dragenter', this.handleDragEnter.bind(this))\n      );\n      this.disposersForDragListeners.push(\n        this.renderer.listen(this.nodeNativeElement, 'dragover', this.handleDragOver.bind(this))\n      );\n      this.disposersForDragListeners.push(\n        this.renderer.listen(this.nodeNativeElement, 'dragstart', this.handleDragStart.bind(this))\n      );\n      this.disposersForDragListeners.push(\n        this.renderer.listen(this.nodeNativeElement, 'dragleave', this.handleDragLeave.bind(this))\n      );\n      this.disposersForDragListeners.push(\n        this.renderer.listen(this.nodeNativeElement, 'drop', this.handleDrop.bind(this))\n      );\n      this.disposersForDragListeners.push(\n        this.renderer.listen(this.nodeNativeElement, 'dragend', this.handleDragEnd.bind(this))\n      );\n    }\n  }\n\n  public ngOnDestroy(): void {\n    /* tslint:disable:typedef */\n    this.disposersForDragListeners.forEach(dispose => dispose());\n    /* tslint:enable:typedef */\n  }\n\n  private handleDragStart(e: DragEvent): any {\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    }\n\n    this.nodeDraggableService.captureNode(new CapturedNode(this.nodeDraggable, this.tree));\n\n    e.dataTransfer.setData('text', NodeDraggableDirective.DATA_TRANSFER_STUB_DATA);\n    e.dataTransfer.effectAllowed = 'move';\n  }\n\n  private handleDragOver(e: DragEvent): any {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  }\n\n  private handleDragEnter(e: DragEvent): any {\n    e.preventDefault();\n    if (this.containsElementAt(e)) {\n      this.addClass('over-drop-target');\n    }\n  }\n\n  private handleDragLeave(e: DragEvent): any {\n    if (!this.containsElementAt(e)) {\n      this.removeClass('over-drop-target');\n    }\n  }\n\n  private handleDrop(e: DragEvent): any {\n    e.preventDefault();\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    }\n\n    this.removeClass('over-drop-target');\n\n    if (!this.isDropPossible(e)) {\n      return false;\n    }\n\n    if (this.nodeDraggableService.getCapturedNode()) {\n      return this.notifyThatNodeWasDropped();\n    }\n  }\n\n  private isDropPossible(e: DragEvent): boolean {\n    const capturedNode = this.nodeDraggableService.getCapturedNode();\n    return capturedNode && capturedNode.canBeDroppedAt(this.nodeDraggable) && this.containsElementAt(e);\n  }\n\n  private handleDragEnd(e: DragEvent): any {\n    this.removeClass('over-drop-target');\n    this.nodeDraggableService.releaseCapturedNode();\n  }\n\n  private containsElementAt(e: DragEvent): boolean {\n    const { x = e.clientX, y = e.clientY } = e;\n    return this.nodeNativeElement.contains(document.elementFromPoint(x, y));\n  }\n\n  private addClass(className: string): void {\n    const classList: DOMTokenList = this.nodeNativeElement.classList;\n    classList.add(className);\n  }\n\n  private removeClass(className: string): void {\n    const classList: DOMTokenList = this.nodeNativeElement.classList;\n    classList.remove(className);\n  }\n\n  private notifyThatNodeWasDropped(): void {\n    this.nodeDraggableService.fireNodeDragged(this.nodeDraggableService.getCapturedNode(), this.nodeDraggable);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/draggable/node-draggable.directive.ts","import { ElementRef, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { CapturedNode } from './captured-node';\nimport { NodeDraggableEvent } from './draggable.events';\n\n@Injectable()\nexport class NodeDraggableService {\n  public draggableNodeEvents$: Subject<NodeDraggableEvent> = new Subject<NodeDraggableEvent>();\n\n  private capturedNode: CapturedNode;\n\n  public fireNodeDragged(captured: CapturedNode, target: ElementRef): void {\n    if (!captured.tree || captured.tree.isStatic()) {\n      return;\n    }\n\n    this.draggableNodeEvents$.next(new NodeDraggableEvent(captured, target));\n  }\n\n  public captureNode(node: CapturedNode): void {\n    this.capturedNode = node;\n  }\n\n  public getCapturedNode(): CapturedNode {\n    return this.capturedNode;\n  }\n\n  public releaseCapturedNode(): void {\n    this.capturedNode = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/draggable/node-draggable.service.ts","export type NodeEditableEventType = 'blur' | 'keyup';\n\nexport enum NodeEditableEventAction {\n  Cancel\n}\n\nexport interface NodeEditableEvent {\n  value: string;\n  type: NodeEditableEventType;\n  action?: NodeEditableEventAction;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/editable/editable.events.ts","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport { NodeEditableEvent, NodeEditableEventAction } from './editable.events';\n\n@Directive({\n  selector: '[nodeEditable]'\n})\nexport class NodeEditableDirective implements OnInit {\n  /* tslint:disable:no-input-rename */\n  @Input('nodeEditable') public nodeValue: string;\n  /* tslint:enable:no-input-rename */\n\n  @Output() public valueChanged: EventEmitter<NodeEditableEvent> = new EventEmitter<NodeEditableEvent>(false);\n\n  public constructor(\n    @Inject(Renderer2) private renderer: Renderer2,\n    @Inject(ElementRef) private elementRef: ElementRef\n  ) {}\n\n  public ngOnInit(): void {\n    const nativeElement = this.elementRef.nativeElement;\n\n    if (nativeElement) {\n      nativeElement.focus();\n    }\n\n    this.renderer.setProperty(nativeElement, 'value', this.nodeValue);\n  }\n\n  @HostListener('keyup.enter', ['$event.target.value'])\n  public applyNewValue(newNodeValue: string): void {\n    this.valueChanged.emit({ type: 'keyup', value: newNodeValue });\n  }\n\n  @HostListener('blur', ['$event.target.value'])\n  public applyNewValueByLoosingFocus(newNodeValue: string): void {\n    this.valueChanged.emit({ type: 'blur', value: newNodeValue });\n  }\n\n  @HostListener('keyup.esc')\n  public cancelEditing(): void {\n    this.valueChanged.emit({\n      type: 'keyup',\n      value: this.nodeValue,\n      action: NodeEditableEventAction.Cancel\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/editable/node-editable.directive.ts","export enum NodeMenuItemAction {\n  NewFolder,\n  NewTag,\n  Rename,\n  Remove,\n  Custom\n}\n\nexport enum NodeMenuAction {\n  Close\n}\n\nexport interface NodeMenuEvent {\n  sender: HTMLElement;\n  action: NodeMenuAction;\n}\n\nexport interface NodeMenuItemSelectedEvent {\n  nodeMenuItemAction: NodeMenuItemAction;\n  nodeMenuItemSelected?: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/menu/menu.events.ts","import { Component, EventEmitter, Inject, Input, OnDestroy, OnInit, Output, Renderer2, ViewChild } from '@angular/core';\nimport { NodeMenuService } from './node-menu.service';\nimport { NodeMenuAction, NodeMenuItemAction, NodeMenuItemSelectedEvent } from './menu.events';\nimport { isEscapePressed, isLeftButtonClicked } from '../utils/event.utils';\n\n@Component({\n  selector: 'node-menu',\n  template: `\n    <div class=\"node-menu\">\n      <ul class=\"node-menu-content\" #menuContainer>\n        <li class=\"node-menu-item\" *ngFor=\"let menuItem of availableMenuItems\"\n          (click)=\"onMenuItemSelected($event, menuItem)\">\n          <div class=\"node-menu-item-icon {{menuItem.cssClass}}\"></div>\n          <span class=\"node-menu-item-value\">{{menuItem.name}}</span>\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class NodeMenuComponent implements OnInit, OnDestroy {\n  @Output()\n  public menuItemSelected: EventEmitter<NodeMenuItemSelectedEvent> = new EventEmitter<NodeMenuItemSelectedEvent>();\n\n  @Input() public menuItems: NodeMenuItem[];\n\n  @ViewChild('menuContainer') public menuContainer: any;\n\n  public availableMenuItems: NodeMenuItem[] = [\n    {\n      name: 'New tag',\n      action: NodeMenuItemAction.NewTag,\n      cssClass: 'new-tag'\n    },\n    {\n      name: 'New folder',\n      action: NodeMenuItemAction.NewFolder,\n      cssClass: 'new-folder'\n    },\n    {\n      name: 'Rename',\n      action: NodeMenuItemAction.Rename,\n      cssClass: 'rename'\n    },\n    {\n      name: 'Remove',\n      action: NodeMenuItemAction.Remove,\n      cssClass: 'remove'\n    }\n  ];\n\n  private disposersForGlobalListeners: Function[] = [];\n\n  public constructor(\n    @Inject(Renderer2) private renderer: Renderer2,\n    @Inject(NodeMenuService) private nodeMenuService: NodeMenuService\n  ) {}\n\n  public ngOnInit(): void {\n    this.availableMenuItems = this.menuItems || this.availableMenuItems;\n    this.disposersForGlobalListeners.push(this.renderer.listen('document', 'keyup', this.closeMenu.bind(this)));\n    this.disposersForGlobalListeners.push(this.renderer.listen('document', 'mousedown', this.closeMenu.bind(this)));\n  }\n\n  public ngOnDestroy(): void {\n    this.disposersForGlobalListeners.forEach((dispose: Function) => dispose());\n  }\n\n  public onMenuItemSelected(e: MouseEvent, selectedMenuItem: NodeMenuItem): void {\n    if (isLeftButtonClicked(e)) {\n      this.menuItemSelected.emit({\n        nodeMenuItemAction: selectedMenuItem.action,\n        nodeMenuItemSelected: selectedMenuItem.name\n      });\n\n      this.nodeMenuService.fireMenuEvent(e.target as HTMLElement, NodeMenuAction.Close);\n    }\n  }\n\n  private closeMenu(e: MouseEvent | KeyboardEvent): void {\n    const mouseClicked = e instanceof MouseEvent;\n    // Check if the click is fired on an element inside a menu\n    const containingTarget =\n      this.menuContainer.nativeElement !== e.target && this.menuContainer.nativeElement.contains(e.target);\n\n    if ((mouseClicked && !containingTarget) || isEscapePressed(e as KeyboardEvent)) {\n      this.nodeMenuService.fireMenuEvent(e.target as HTMLElement, NodeMenuAction.Close);\n    }\n  }\n}\n\nexport interface NodeMenuItem {\n  name: string;\n  action: NodeMenuItemAction;\n  cssClass?: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/menu/node-menu.component.ts","import { ElementRef, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { NodeMenuAction, NodeMenuEvent } from './menu.events';\n\n@Injectable()\nexport class NodeMenuService {\n  public nodeMenuEvents$: Subject<NodeMenuEvent> = new Subject<NodeMenuEvent>();\n\n  public fireMenuEvent(sender: HTMLElement, action: NodeMenuAction): void {\n    const nodeMenuEvent: NodeMenuEvent = { sender, action };\n    this.nodeMenuEvents$.next(nodeMenuEvent);\n  }\n\n  public hideMenuStream(treeElementRef: ElementRef): Observable<any> {\n    return this.nodeMenuEvents$\n      .filter((e: NodeMenuEvent) => treeElementRef.nativeElement !== e.sender)\n      .filter((e: NodeMenuEvent) => e.action === NodeMenuAction.Close);\n  }\n\n  public hideMenuForAllNodesExcept(treeElementRef: ElementRef): void {\n    this.nodeMenuEvents$.next({\n      sender: treeElementRef.nativeElement,\n      action: NodeMenuAction.Close\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/menu/node-menu.service.ts","import 'rxjs/add/operator/filter';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/merge';\n\n// This forces angular compiler to generate a \"rxjs-imports.metadata.json\"\n// with a valid metadata instead of \"[null]\"\nexport const noop = () => {};\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/rxjs-imports.ts","import { TreeService } from './tree.service';\nimport { Tree } from './tree';\nimport { TreeModel } from './tree.types';\nimport { NodeMenuItemAction } from './menu/menu.events';\nimport { TreeInternalComponent } from './tree-internal.component';\nimport { MouseButtons } from './utils/event.utils';\nimport { get } from './utils/fn.utils';\n\nexport class TreeController {\n  private tree: Tree;\n  private treeService: TreeService;\n\n  constructor(private component: TreeInternalComponent) {\n    this.tree = this.component.tree;\n    this.treeService = this.component.treeService;\n  }\n\n  public select(): void {\n    if (!this.isSelected()) {\n      this.component.onNodeSelected({ button: MouseButtons.Left });\n    }\n  }\n\n  public unselect(): void {\n    if (this.isSelected()) {\n      this.component.onNodeUnselected({ button: MouseButtons.Left });\n    }\n  }\n\n  public isSelected(): boolean {\n    return this.component.isSelected;\n  }\n\n  public expand(): void {\n    if (this.isCollapsed()) {\n      this.component.onSwitchFoldingType();\n    }\n  }\n\n  public expandToParent(tree: any = this.tree): void {\n    if (tree) {\n      const controller = this.treeService.getController(tree.id);\n      if (controller) {\n        requestAnimationFrame(() => {\n          controller.expand();\n          this.expandToParent(tree.parent);\n        });\n      }\n    }\n  }\n\n  public isExpanded(): boolean {\n    return this.tree.isNodeExpanded();\n  }\n\n  public collapse(): void {\n    if (this.isExpanded()) {\n      this.component.onSwitchFoldingType();\n    }\n  }\n\n  public isCollapsed(): boolean {\n    return this.tree.isNodeCollapsed();\n  }\n\n  public toTreeModel(): TreeModel {\n    return this.tree.toTreeModel();\n  }\n\n  public rename(newValue: string): void {\n    this.tree.markAsBeingRenamed();\n    this.component.applyNewValue({ type: 'keyup', value: newValue });\n  }\n\n  public remove(): void {\n    this.component.onMenuItemSelected({ nodeMenuItemAction: NodeMenuItemAction.Remove });\n  }\n\n  public addChild(newNode: TreeModel): void {\n    if (this.tree.hasDeferredChildren() && !this.tree.childrenWereLoaded()) {\n      return;\n    }\n\n    const newTree = this.tree.createNode(Array.isArray(newNode.children), newNode);\n    this.treeService.fireNodeCreated(newTree);\n  }\n\n  public addChildAsync(newNode: TreeModel): Promise<Tree> {\n    if (this.tree.hasDeferredChildren() && !this.tree.childrenWereLoaded()) {\n      return Promise.reject(\n        new Error('This node loads its children asynchronously, hence child cannot be added this way')\n      );\n    }\n\n    const newTree = this.tree.createNode(Array.isArray(newNode.children), newNode);\n    this.treeService.fireNodeCreated(newTree);\n\n    // This will give TreeInternalComponent to set up a controller for the node\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(newTree);\n      });\n    });\n  }\n\n  public changeNodeId(id: string | number) {\n    if (!id) {\n      throw Error('You should supply an id!');\n    }\n\n    if (this.treeService.hasController(id)) {\n      throw Error(`Controller already exists for the given id: ${id}`);\n    }\n\n    this.treeService.deleteController(this.tree.id);\n    this.tree.id = id;\n    this.treeService.setController(this.tree.id, this);\n  }\n\n  public reloadChildren(): void {\n    this.tree.reloadChildren();\n  }\n\n  public setChildren(children: TreeModel[]): void {\n    if (!this.tree.isLeaf()) {\n      this.tree.setChildren(children);\n    }\n  }\n\n  public startRenaming(): void {\n    this.tree.markAsBeingRenamed();\n  }\n\n  public check(): void {\n    this.component.onNodeChecked();\n  }\n\n  public uncheck(): void {\n    this.component.onNodeUnchecked();\n  }\n\n  public isChecked(): boolean {\n    return this.tree.checked;\n  }\n\n  public isIndetermined(): boolean {\n    return get(this.component, 'checkboxElementRef.nativeElement.indeterminate');\n  }\n\n  public allowSelection() {\n    this.tree.selectionAllowed = true;\n  }\n\n  public forbidSelection() {\n    this.tree.selectionAllowed = false;\n  }\n\n  public isSelectionAllowed(): boolean {\n    return this.tree.selectionAllowed;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree-controller.ts","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\n\nimport * as TreeTypes from './tree.types';\nimport { Ng2TreeSettings } from './tree.types';\nimport { Tree } from './tree';\nimport { TreeController } from './tree-controller';\nimport { NodeMenuService } from './menu/node-menu.service';\nimport { NodeMenuItemAction, NodeMenuItemSelectedEvent } from './menu/menu.events';\nimport { NodeEditableEvent, NodeEditableEventAction } from './editable/editable.events';\nimport { NodeCheckedEvent, NodeEvent } from './tree.events';\nimport { TreeService } from './tree.service';\nimport * as EventUtils from './utils/event.utils';\nimport { NodeDraggableEvent } from './draggable/draggable.events';\nimport { Subscription } from 'rxjs/Subscription';\nimport { get, isNil } from './utils/fn.utils';\n\n@Component({\n  selector: 'tree-internal',\n  template: `\n  <ul class=\"tree\" *ngIf=\"tree\" [ngClass]=\"{rootless: isRootHidden()}\">\n    <li>\n      <div class=\"value-container\"\n        [ngClass]=\"{rootless: isRootHidden()}\"\n        [class.selected]=\"isSelected\"\n        (contextmenu)=\"showRightMenu($event)\"\n        [nodeDraggable]=\"nodeElementRef\"\n        [tree]=\"tree\">\n\n        <div class=\"folding\" (click)=\"onSwitchFoldingType()\" [ngClass]=\"tree.foldingCssClass\"></div>\n\n        <div class=\"node-checkbox\" *ngIf=\"settings.showCheckboxes && this.tree.checkedIsVisible\">\n        <input checkbox  type=\"checkbox\" [disabled]=\"isReadOnly\" [checked]=\"this.tree.checked\" (change)=\"switchNodeCheckStatus()\" #checkbox />\n         </div>\n\n        <div class=\"node-value\"\n          *ngIf=\"!shouldShowInputForTreeValue()\"\n          [class.node-selected]=\"isSelected\"\n          (click)=\"onNodeSelected($event)\">\n            <div *ngIf=\"tree.nodeTemplate\" class=\"node-template\" [innerHTML]=\"tree.nodeTemplate | safeHtml\"></div>\n            <span *ngIf=\"!template\" class=\"node-name\" [innerHTML]=\"tree.value | safeHtml\"></span>\n            <span class=\"loading-children\" *ngIf=\"tree.childrenAreBeingLoaded()\"></span>\n            <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ $implicit: tree.node }\"></ng-template>\n        </div>\n\n        <input type=\"text\" class=\"node-value\"\n           *ngIf=\"shouldShowInputForTreeValue()\"\n           [nodeEditable]=\"tree.value\"\n           (valueChanged)=\"applyNewValue($event)\"/>\n\n        <div class=\"node-left-menu\" *ngIf=\"tree.hasLeftMenu()\" (click)=\"showLeftMenu($event)\" [innerHTML]=\"tree.leftMenuTemplate\">\n        </div>\n        <node-menu *ngIf=\"tree.hasLeftMenu() && isLeftMenuVisible && !hasCustomMenu()\"\n          (menuItemSelected)=\"onMenuItemSelected($event)\">\n        </node-menu>\n      </div>\n\n      <node-menu *ngIf=\"isRightMenuVisible && !hasCustomMenu()\"\n           (menuItemSelected)=\"onMenuItemSelected($event)\">\n      </node-menu>\n\n      <node-menu *ngIf=\"hasCustomMenu() && (isRightMenuVisible || isLeftMenuVisible)\"\n           [menuItems]=\"tree.menuItems\"\n           (menuItemSelected)=\"onMenuItemSelected($event)\">\n      </node-menu>\n\n      <div *ngIf=\"tree.keepNodesInDOM()\" [ngStyle]=\"{'display': tree.isNodeExpanded() ? 'block' : 'none'}\">\n        <tree-internal *ngFor=\"let child of tree.childrenAsync | async\" [tree]=\"child\" [template]=\"template\" [settings]=\"settings\"></tree-internal>\n      </div>\n      <ng-template [ngIf]=\"tree.isNodeExpanded() && !tree.keepNodesInDOM()\">\n        <tree-internal *ngFor=\"let child of tree.childrenAsync | async\" [tree]=\"child\" [template]=\"template\" [settings]=\"settings\"></tree-internal>\n      </ng-template>\n    </li>\n  </ul>\n  `\n})\nexport class TreeInternalComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {\n  @Input() public tree: Tree;\n\n  @Input() public settings: TreeTypes.Ng2TreeSettings;\n\n  @Input() public template: TemplateRef<any>;\n\n  public autocheckChildren = false;\n  public isSelected = false;\n  public isRightMenuVisible = false;\n  public isLeftMenuVisible = false;\n  public isReadOnly = false;\n  public controller: TreeController;\n\n  @ViewChild('checkbox') public checkboxElementRef: ElementRef;\n\n  private subscriptions: Subscription[] = [];\n\n  public constructor(\n    private nodeMenuService: NodeMenuService,\n    public treeService: TreeService,\n    public nodeElementRef: ElementRef\n  ) {}\n\n  public ngAfterViewInit(): void {\n    if (this.tree.checked && !(this.tree as any).firstCheckedFired) {\n      (this.tree as any).firstCheckedFired = true;\n      this.treeService.fireNodeChecked(this.tree);\n    }\n  }\n\n  public ngOnInit(): void {\n    const nodeId = get(this.tree, 'node.id', '');\n    if (nodeId) {\n      this.controller = new TreeController(this);\n      this.treeService.setController(nodeId, this.controller);\n    }\n\n    this.settings = this.settings || new Ng2TreeSettings();\n    this.isReadOnly = !get(this.settings, 'enableCheckboxes', true);\n\n    if (this.tree.isRoot() && this.settings.rootIsVisible === false) {\n      this.tree.disableCollapseOnInit();\n    }\n\n    this.subscriptions.push(\n      this.nodeMenuService.hideMenuStream(this.nodeElementRef).subscribe(() => {\n        this.isRightMenuVisible = false;\n        this.isLeftMenuVisible = false;\n      })\n    );\n\n    this.subscriptions.push(this.treeService.unselectStream(this.tree).subscribe(() => (this.isSelected = false)));\n\n    this.subscriptions.push(\n      this.treeService.draggedStream(this.tree, this.nodeElementRef).subscribe((e: NodeDraggableEvent) => {\n        if (this.tree.hasSibling(e.captured.tree)) {\n          this.swapWithSibling(e.captured.tree, this.tree);\n        } else if (this.tree.isBranch()) {\n          this.moveNodeToThisTreeAndRemoveFromPreviousOne(e, this.tree);\n        } else {\n          this.moveNodeToParentTreeAndRemoveFromPreviousOne(e, this.tree);\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.treeService.nodeChecked$\n        .merge(this.treeService.nodeUnchecked$)\n        .filter((e: NodeCheckedEvent) => this.eventContainsId(e) && this.tree.hasChild(e.node))\n        .subscribe((e: NodeCheckedEvent) => this.updateCheckboxState())\n    );\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    this.controller = new TreeController(this);\n  }\n\n  public ngOnDestroy(): void {\n    if (get(this.tree, 'node.id', '')) {\n      this.treeService.deleteController(this.tree.node.id);\n    }\n\n    this.subscriptions.forEach(sub => sub && sub.unsubscribe());\n  }\n\n  private swapWithSibling(sibling: Tree, tree: Tree): void {\n    tree.swapWithSibling(sibling);\n    this.treeService.fireNodeMoved(sibling, sibling.parent);\n  }\n\n  private moveNodeToThisTreeAndRemoveFromPreviousOne(e: NodeDraggableEvent, tree: Tree): void {\n    this.treeService.fireNodeRemoved(e.captured.tree);\n    const addedChild = tree.addChild(e.captured.tree);\n    this.treeService.fireNodeMoved(addedChild, e.captured.tree.parent);\n  }\n\n  private moveNodeToParentTreeAndRemoveFromPreviousOne(e: NodeDraggableEvent, tree: Tree): void {\n    this.treeService.fireNodeRemoved(e.captured.tree);\n    const addedSibling = tree.addSibling(e.captured.tree, tree.positionInParent);\n    this.treeService.fireNodeMoved(addedSibling, e.captured.tree.parent);\n  }\n\n  public onNodeSelected(e: { button: number }): void {\n    if (!this.tree.selectionAllowed) {\n      return;\n    }\n\n    if (EventUtils.isLeftButtonClicked(e as MouseEvent)) {\n      this.isSelected = true;\n      this.treeService.fireNodeSelected(this.tree);\n    }\n  }\n\n  public onNodeUnselected(e: { button: number }): void {\n    if (!this.tree.selectionAllowed) {\n      return;\n    }\n\n    if (EventUtils.isLeftButtonClicked(e as MouseEvent)) {\n      this.isSelected = false;\n      this.treeService.fireNodeUnselected(this.tree);\n    }\n  }\n\n  public showRightMenu(e: MouseEvent): void {\n    if (!this.tree.hasRightMenu()) {\n      return;\n    }\n\n    if (EventUtils.isRightButtonClicked(e)) {\n      this.isRightMenuVisible = !this.isRightMenuVisible;\n      this.nodeMenuService.hideMenuForAllNodesExcept(this.nodeElementRef);\n    }\n    e.preventDefault();\n  }\n\n  public showLeftMenu(e: MouseEvent): void {\n    if (!this.tree.hasLeftMenu()) {\n      return;\n    }\n\n    if (EventUtils.isLeftButtonClicked(e)) {\n      this.isLeftMenuVisible = !this.isLeftMenuVisible;\n      this.nodeMenuService.hideMenuForAllNodesExcept(this.nodeElementRef);\n      if (this.isLeftMenuVisible) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  public onMenuItemSelected(e: NodeMenuItemSelectedEvent): void {\n    switch (e.nodeMenuItemAction) {\n      case NodeMenuItemAction.NewTag:\n        this.onNewSelected(e);\n        break;\n      case NodeMenuItemAction.NewFolder:\n        this.onNewSelected(e);\n        break;\n      case NodeMenuItemAction.Rename:\n        this.onRenameSelected();\n        break;\n      case NodeMenuItemAction.Remove:\n        this.onRemoveSelected();\n        break;\n      case NodeMenuItemAction.Custom:\n        this.onCustomSelected();\n        this.treeService.fireMenuItemSelected(this.tree, e.nodeMenuItemSelected);\n        break;\n      default:\n        throw new Error(`Chosen menu item doesn't exist`);\n    }\n  }\n\n  private onNewSelected(e: NodeMenuItemSelectedEvent): void {\n    this.tree.createNode(e.nodeMenuItemAction === NodeMenuItemAction.NewFolder);\n    this.isRightMenuVisible = false;\n    this.isLeftMenuVisible = false;\n  }\n\n  private onRenameSelected(): void {\n    this.tree.markAsBeingRenamed();\n    this.isRightMenuVisible = false;\n    this.isLeftMenuVisible = false;\n  }\n\n  private onRemoveSelected(): void {\n    this.treeService.deleteController(get(this.tree, 'node.id', ''));\n    this.treeService.fireNodeRemoved(this.tree);\n  }\n\n  private onCustomSelected(): void {\n    this.isRightMenuVisible = false;\n    this.isLeftMenuVisible = false;\n  }\n\n  public onSwitchFoldingType(): void {\n    this.tree.switchFoldingType();\n    this.treeService.fireNodeSwitchFoldingType(this.tree);\n  }\n\n  public applyNewValue(e: NodeEditableEvent): void {\n    if ((e.action === NodeEditableEventAction.Cancel || this.tree.isNew()) && Tree.isValueEmpty(e.value)) {\n      return this.treeService.fireNodeRemoved(this.tree);\n    }\n\n    if (this.tree.isNew()) {\n      this.tree.value = e.value;\n      this.treeService.fireNodeCreated(this.tree);\n    }\n\n    if (this.tree.isBeingRenamed()) {\n      const oldValue = this.tree.value;\n      this.tree.value = e.value;\n      this.treeService.fireNodeRenamed(oldValue, this.tree);\n    }\n\n    this.tree.markAsModified();\n  }\n\n  public shouldShowInputForTreeValue(): boolean {\n    return this.tree.isNew() || this.tree.isBeingRenamed();\n  }\n\n  public isRootHidden(): boolean {\n    return this.tree.isRoot() && !this.settings.rootIsVisible;\n  }\n\n  public hasCustomMenu(): boolean {\n    return this.tree.hasCustomMenu();\n  }\n\n  public switchNodeCheckStatus() {\n    if (!this.tree.checked) {\n      this.onNodeChecked();\n    } else {\n      this.onNodeUnchecked();\n    }\n  }\n\n  public onNodeChecked(): void {\n    if (!this.checkboxElementRef) {\n      return;\n    }\n\n    this.checkboxElementRef.nativeElement.indeterminate = false;\n    this.treeService.fireNodeChecked(this.tree);\n    // this.executeOnChildController(controller => controller.check());\n    if (this.autocheckChildren) {\n      this.executeOnChildController(controller => controller.check());\n    }\n    this.tree.checked = true;\n  }\n\n  public onNodeUnchecked(): void {\n    if (!this.checkboxElementRef) {\n      return;\n    }\n\n    this.checkboxElementRef.nativeElement.indeterminate = false;\n    this.treeService.fireNodeUnchecked(this.tree);\n    this.executeOnChildController(controller => controller.uncheck());\n    this.tree.checked = false;\n  }\n\n  private executeOnChildController(executor: (controller: TreeController) => void) {\n    if (this.tree.hasLoadedChildern()) {\n      this.tree.children.forEach((child: Tree) => {\n        const controller = this.treeService.getController(child.id);\n        if (!isNil(controller)) {\n          executor(controller);\n        }\n      });\n    }\n  }\n\n  updateCheckboxState(): void {\n    // Calling setTimeout so the value of isChecked will be updated and after that I'll check the children status.\n    setTimeout(() => {\n      const checkedChildrenAmount = this.tree.checkedChildrenAmount();\n      if (checkedChildrenAmount === 0) {\n        if (this.checkboxElementRef) {\n          this.checkboxElementRef.nativeElement.indeterminate = false;\n        }\n        this.tree.checked = false;\n        this.treeService.fireNodeUnchecked(this.tree);\n      } else if (checkedChildrenAmount === this.tree.loadedChildrenAmount()) {\n        if (this.checkboxElementRef) {\n          this.checkboxElementRef.nativeElement.indeterminate = false;\n        }\n        this.tree.checked = true;\n        this.treeService.fireNodeChecked(this.tree);\n      } else {\n        this.tree.checked = false;\n        if (this.checkboxElementRef) {\n          this.checkboxElementRef.nativeElement.indeterminate = true && this.autocheckChildren;\n        }\n        this.treeService.fireNodeIndetermined(this.tree);\n      }\n    });\n  }\n\n  private eventContainsId(event: NodeEvent): boolean {\n    if (!event.node.id) {\n      console.warn(\n        '\"Node with checkbox\" feature requires a unique id assigned to every node, please consider to add it.'\n      );\n      return false;\n    }\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree-internal.component.ts","import {\n  Component,\n  ContentChild,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { TreeService } from './tree.service';\nimport * as TreeTypes from './tree.types';\n\nimport { MenuItemSelectedEvent, NodeCheckedEvent, NodeEvent, NodeUncheckedEvent } from './tree.events';\n\nimport { Tree } from './tree';\nimport { TreeController } from './tree-controller';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'tree',\n  template: `<tree-internal #rootComponent [tree]=\"tree\" [settings]=\"settings\" [template]=\"template\"></tree-internal>`,\n  providers: [TreeService]\n})\nexport class TreeComponent implements OnInit, OnChanges, OnDestroy {\n  private static EMPTY_TREE: Tree = new Tree({ value: '' });\n\n  /* tslint:disable:no-input-rename */\n  @Input('tree') public treeModel: TreeTypes.TreeModel;\n  /* tslint:enable:no-input-rename */\n\n  @Input() public settings: TreeTypes.Ng2TreeSettings;\n\n  @Output() public nodeCreated: EventEmitter<any> = new EventEmitter();\n\n  @Output() public nodeRemoved: EventEmitter<any> = new EventEmitter();\n\n  @Output() public nodeRenamed: EventEmitter<any> = new EventEmitter();\n\n  @Output() public nodeSelected: EventEmitter<any> = new EventEmitter();\n\n  @Output() public nodeUnselected: EventEmitter<any> = new EventEmitter();\n\n  @Output() public nodeMoved: EventEmitter<any> = new EventEmitter();\n\n  @Output() public nodeExpanded: EventEmitter<any> = new EventEmitter();\n\n  @Output() public nodeCollapsed: EventEmitter<any> = new EventEmitter();\n\n  @Output() public loadNextLevel: EventEmitter<any> = new EventEmitter();\n\n  @Output() public nodeChecked: EventEmitter<NodeCheckedEvent> = new EventEmitter();\n\n  @Output() public nodeUnchecked: EventEmitter<NodeUncheckedEvent> = new EventEmitter();\n\n  @Output() public menuItemSelected: EventEmitter<any> = new EventEmitter();\n\n  public tree: Tree;\n\n  @ViewChild('rootComponent') public rootComponent;\n\n  @ContentChild(TemplateRef) public template;\n\n  private subscriptions: Subscription[] = [];\n\n  public constructor(@Inject(TreeService) private treeService: TreeService) {}\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (!this.treeModel) {\n      this.tree = TreeComponent.EMPTY_TREE;\n    } else {\n      this.tree = new Tree(this.treeModel);\n    }\n  }\n\n  public ngOnInit(): void {\n    this.subscriptions.push(\n      this.treeService.nodeRemoved$.subscribe((e: NodeEvent) => {\n        this.nodeRemoved.emit(e);\n      })\n    );\n\n    this.subscriptions.push(\n      this.treeService.nodeRenamed$.subscribe((e: NodeEvent) => {\n        this.nodeRenamed.emit(e);\n      })\n    );\n\n    this.subscriptions.push(\n      this.treeService.nodeCreated$.subscribe((e: NodeEvent) => {\n        this.nodeCreated.emit(e);\n      })\n    );\n\n    this.subscriptions.push(\n      this.treeService.nodeSelected$.subscribe((e: NodeEvent) => {\n        this.nodeSelected.emit(e);\n      })\n    );\n\n    this.subscriptions.push(\n      this.treeService.nodeUnselected$.subscribe((e: NodeEvent) => {\n        this.nodeUnselected.emit(e);\n      })\n    );\n\n    this.subscriptions.push(\n      this.treeService.nodeMoved$.subscribe((e: NodeEvent) => {\n        this.nodeMoved.emit(e);\n      })\n    );\n\n    this.subscriptions.push(\n      this.treeService.nodeExpanded$.subscribe((e: NodeEvent) => {\n        this.nodeExpanded.emit(e);\n      })\n    );\n\n    this.subscriptions.push(\n      this.treeService.nodeCollapsed$.subscribe((e: NodeEvent) => {\n        this.nodeCollapsed.emit(e);\n      })\n    );\n\n    this.subscriptions.push(\n      this.treeService.menuItemSelected$.subscribe((e: MenuItemSelectedEvent) => {\n        this.menuItemSelected.emit(e);\n      })\n    );\n\n    this.subscriptions.push(\n      this.treeService.loadNextLevel$.subscribe((e: NodeEvent) => {\n        this.loadNextLevel.emit(e);\n      })\n    );\n\n    this.subscriptions.push(\n      this.treeService.nodeChecked$.subscribe((e: NodeCheckedEvent) => {\n        this.nodeChecked.emit(e);\n      })\n    );\n\n    this.subscriptions.push(\n      this.treeService.nodeUnchecked$.subscribe((e: NodeUncheckedEvent) => {\n        this.nodeUnchecked.emit(e);\n      })\n    );\n  }\n\n  public getController(): TreeController {\n    return this.rootComponent.controller;\n  }\n\n  public getControllerByNodeId(id: number | string): TreeController {\n    return this.treeService.getController(id);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub && sub.unsubscribe());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree.component.ts","import { Tree } from './tree';\nimport { RenamableNode } from './tree.types';\n\nexport class NodeEvent {\n  public constructor(public node: Tree) {}\n}\n\nexport class NodeSelectedEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeUnselectedEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeDestructiveEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeMovedEvent extends NodeDestructiveEvent {\n  public constructor(node: Tree, public previousParent: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeRemovedEvent extends NodeDestructiveEvent {\n  public constructor(node: Tree, public lastIndex: number) {\n    super(node);\n  }\n}\n\nexport class NodeCreatedEvent extends NodeDestructiveEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeRenamedEvent extends NodeDestructiveEvent {\n  public constructor(node: Tree, public oldValue: string | RenamableNode, public newValue: string | RenamableNode) {\n    super(node);\n  }\n}\n\nexport class NodeExpandedEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeCollapsedEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class MenuItemSelectedEvent extends NodeEvent {\n  public constructor(node: Tree, public selectedItem: string) {\n    super(node);\n  }\n}\n\nexport class LoadNextLevelEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeCheckedEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeUncheckedEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\nexport class NodeIndeterminedEvent extends NodeEvent {\n  public constructor(node: Tree) {\n    super(node);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree.events.ts","import './rxjs-imports';\n\nimport { NgModule } from '@angular/core';\nimport { TreeComponent } from './tree.component';\nimport { TreeInternalComponent } from './tree-internal.component';\nimport { CommonModule } from '@angular/common';\nimport { NodeDraggableDirective } from './draggable/node-draggable.directive';\nimport { NodeDraggableService } from './draggable/node-draggable.service';\nimport { NodeEditableDirective } from './editable/node-editable.directive';\nimport { NodeMenuComponent } from './menu/node-menu.component';\nimport { NodeMenuService } from './menu/node-menu.service';\nimport { TreeService } from './tree.service';\nimport { SafeHtmlPipe } from './utils/safe-html.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    NodeDraggableDirective,\n    TreeComponent,\n    NodeEditableDirective,\n    NodeMenuComponent,\n    TreeInternalComponent,\n    SafeHtmlPipe\n  ],\n  exports: [TreeComponent],\n  providers: [NodeDraggableService, NodeMenuService, TreeService]\n})\nexport class TreeModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree.module.ts","import {\n  LoadNextLevelEvent,\n  MenuItemSelectedEvent,\n  NodeCheckedEvent,\n  NodeCollapsedEvent,\n  NodeCreatedEvent,\n  NodeExpandedEvent,\n  NodeIndeterminedEvent,\n  NodeMovedEvent,\n  NodeRemovedEvent,\n  NodeRenamedEvent,\n  NodeSelectedEvent,\n  NodeUncheckedEvent,\n  NodeUnselectedEvent\n} from './tree.events';\nimport { RenamableNode } from './tree.types';\nimport { Tree } from './tree';\nimport { TreeController } from './tree-controller';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ElementRef, Inject, Injectable } from '@angular/core';\nimport { NodeDraggableService } from './draggable/node-draggable.service';\nimport { NodeDraggableEvent } from './draggable/draggable.events';\nimport { isEmpty } from './utils/fn.utils';\n\n@Injectable()\nexport class TreeService {\n  public nodeMoved$: Subject<NodeMovedEvent> = new Subject<NodeMovedEvent>();\n  public nodeRemoved$: Subject<NodeRemovedEvent> = new Subject<NodeRemovedEvent>();\n  public nodeRenamed$: Subject<NodeRenamedEvent> = new Subject<NodeRenamedEvent>();\n  public nodeCreated$: Subject<NodeCreatedEvent> = new Subject<NodeCreatedEvent>();\n  public nodeSelected$: Subject<NodeSelectedEvent> = new Subject<NodeSelectedEvent>();\n  public nodeUnselected$: Subject<NodeUnselectedEvent> = new Subject<NodeUnselectedEvent>();\n  public nodeExpanded$: Subject<NodeExpandedEvent> = new Subject<NodeExpandedEvent>();\n  public nodeCollapsed$: Subject<NodeCollapsedEvent> = new Subject<NodeCollapsedEvent>();\n  public menuItemSelected$: Subject<MenuItemSelectedEvent> = new Subject<MenuItemSelectedEvent>();\n  public loadNextLevel$: Subject<LoadNextLevelEvent> = new Subject<LoadNextLevelEvent>();\n  public nodeChecked$: Subject<NodeCheckedEvent> = new Subject<NodeCheckedEvent>();\n  public nodeUnchecked$: Subject<NodeUncheckedEvent> = new Subject<NodeUncheckedEvent>();\n  public nodeIndetermined$: Subject<NodeIndeterminedEvent> = new Subject<NodeIndeterminedEvent>();\n\n  private controllers: Map<string | number, TreeController> = new Map();\n\n  public constructor(@Inject(NodeDraggableService) private nodeDraggableService: NodeDraggableService) {\n    this.nodeRemoved$.subscribe((e: NodeRemovedEvent) => e.node.removeItselfFromParent());\n  }\n\n  public unselectStream(tree: Tree): Observable<NodeSelectedEvent> {\n    return this.nodeSelected$.filter((e: NodeSelectedEvent) => tree !== e.node);\n  }\n\n  public fireNodeRemoved(tree: Tree): void {\n    this.nodeRemoved$.next(new NodeRemovedEvent(tree, tree.positionInParent));\n  }\n\n  public fireNodeCreated(tree: Tree): void {\n    this.nodeCreated$.next(new NodeCreatedEvent(tree));\n  }\n\n  public fireNodeSelected(tree: Tree): void {\n    this.nodeSelected$.next(new NodeSelectedEvent(tree));\n  }\n\n  public fireNodeUnselected(tree: Tree): void {\n    this.nodeUnselected$.next(new NodeUnselectedEvent(tree));\n  }\n\n  public fireNodeRenamed(oldValue: RenamableNode | string, tree: Tree): void {\n    this.nodeRenamed$.next(new NodeRenamedEvent(tree, oldValue, tree.value));\n  }\n\n  public fireNodeMoved(tree: Tree, parent: Tree): void {\n    this.nodeMoved$.next(new NodeMovedEvent(tree, parent));\n  }\n\n  public fireMenuItemSelected(tree: Tree, selectedItem: string): void {\n    this.menuItemSelected$.next(new MenuItemSelectedEvent(tree, selectedItem));\n  }\n\n  public fireNodeSwitchFoldingType(tree: Tree): void {\n    if (tree.isNodeExpanded()) {\n      this.fireNodeExpanded(tree);\n      if (this.shouldFireLoadNextLevel(tree)) {\n        this.fireLoadNextLevel(tree);\n      }\n    } else if (tree.isNodeCollapsed()) {\n      this.fireNodeCollapsed(tree);\n    }\n  }\n\n  private fireNodeExpanded(tree: Tree): void {\n    this.nodeExpanded$.next(new NodeExpandedEvent(tree));\n  }\n\n  private fireNodeCollapsed(tree: Tree): void {\n    this.nodeCollapsed$.next(new NodeCollapsedEvent(tree));\n  }\n\n  private fireLoadNextLevel(tree: Tree): void {\n    this.loadNextLevel$.next(new LoadNextLevelEvent(tree));\n  }\n\n  public fireNodeChecked(tree: Tree): void {\n    this.nodeChecked$.next(new NodeCheckedEvent(tree));\n  }\n\n  public fireNodeUnchecked(tree: Tree): void {\n    this.nodeUnchecked$.next(new NodeUncheckedEvent(tree));\n  }\n\n  public draggedStream(tree: Tree, element: ElementRef): Observable<NodeDraggableEvent> {\n    return this.nodeDraggableService.draggableNodeEvents$\n      .filter((e: NodeDraggableEvent) => e.target === element)\n      .filter((e: NodeDraggableEvent) => !e.captured.tree.hasChild(tree));\n  }\n\n  public setController(id: string | number, controller: TreeController): void {\n    this.controllers.set(id, controller);\n  }\n\n  public deleteController(id: string | number): void {\n    if (this.controllers.has(id)) {\n      this.controllers.delete(id);\n    }\n  }\n\n  public getController(id: string | number): TreeController {\n    if (this.controllers.has(id)) {\n      return this.controllers.get(id);\n    }\n\n    return null;\n  }\n\n  public hasController(id: string | number): boolean {\n    return this.controllers.has(id);\n  }\n\n  private shouldFireLoadNextLevel(tree: Tree): boolean {\n    const shouldLoadNextLevel =\n      tree.node.emitLoadNextLevel &&\n      !tree.node.loadChildren &&\n      !tree.childrenAreBeingLoaded() &&\n      isEmpty(tree.children);\n\n    if (shouldLoadNextLevel) {\n      tree.loadingChildrenRequested();\n    }\n\n    return shouldLoadNextLevel;\n  }\n\n  public fireNodeIndetermined(tree: Tree): void {\n    this.nodeIndetermined$.next(new NodeIndeterminedEvent(tree));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree.service.ts","import { defaultsDeep, get, has, includes, isEmpty, isFunction, isNil, omit, once, size, trim } from './utils/fn.utils';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport {\n  ChildrenLoadingFunction,\n  FoldingType,\n  RenamableNode,\n  TreeModel,\n  TreeModelSettings,\n  TreeStatus\n} from './tree.types';\nimport { NodeMenuItem } from './menu/node-menu.component';\n\nimport * as uuidv4 from 'uuid/v4';\n\nenum ChildrenLoadingState {\n  NotStarted,\n  Loading,\n  Completed\n}\n\nexport class Tree {\n  private _children: Tree[];\n  private _loadChildren: ChildrenLoadingFunction;\n  private _childrenLoadingState: ChildrenLoadingState = ChildrenLoadingState.NotStarted;\n  private _childrenAsyncOnce: () => Observable<Tree[]> = once(() => {\n    return new Observable((observer: Observer<Tree[]>) => {\n      setTimeout(() => {\n        this._childrenLoadingState = ChildrenLoadingState.Loading;\n        this._loadChildren((children: TreeModel[]) => {\n          this._children = (children || []).map((child: TreeModel) => new Tree(child, this));\n          this._childrenLoadingState = ChildrenLoadingState.Completed;\n          observer.next(this.children);\n          observer.complete();\n        });\n      });\n    });\n  });\n\n  public node: TreeModel;\n  public parent: Tree;\n\n  // STATIC METHODS ----------------------------------------------------------------------------------------------------\n\n  /**\n   * Check that value passed is not empty (it doesn't consist of only whitespace symbols).\n   * @param {string} value - A value that should be checked.\n   * @returns {boolean} - A flag indicating that value is empty or not.\n   * @static\n   */\n  public static isValueEmpty(value: string): boolean {\n    return isEmpty(trim(value));\n  }\n\n  /**\n   * Check whether a given value can be considered RenamableNode.\n   * @param {any} value - A value to check.\n   * @returns {boolean} - A flag indicating whether given value is Renamable node or not.\n   * @static\n   */\n  public static isRenamable(value: any): value is RenamableNode {\n    return (\n      has(value, 'setName') &&\n      isFunction(value.setName) &&\n      (has(value, 'toString') && isFunction(value.toString) && value.toString !== Object.toString)\n    );\n  }\n\n  private static cloneTreeShallow(origin: Tree): Tree {\n    const tree = new Tree(Object.assign({}, origin.node));\n    tree._children = origin._children;\n    return tree;\n  }\n\n  private static applyNewValueToRenamable(value: RenamableNode, newValue: string): RenamableNode {\n    const renamableValue: RenamableNode = Object.assign({}, value as RenamableNode);\n    renamableValue.setName(newValue);\n    return renamableValue;\n  }\n\n  /**\n   * Build an instance of Tree from an object implementing TreeModel interface.\n   * @param {TreeModel} model - A model that is used to build a tree.\n   * @param {Tree} [parent] - An optional parent if you want to build a tree from the model that should be a child of an existing Tree instance.\n   * @param {boolean} [isBranch] - An option that makes a branch from created tree. Branch can have children.\n   */\n  public constructor(node: TreeModel, parent: Tree = null, isBranch: boolean = false) {\n    this.buildTreeFromModel(node, parent, isBranch || Array.isArray(node.children));\n  }\n\n  private buildTreeFromModel(model: TreeModel, parent: Tree, isBranch: boolean): void {\n    this.parent = parent;\n    this.node = Object.assign(\n      omit(model, 'children') as TreeModel,\n      { settings: TreeModelSettings.merge(model, get(parent, 'node')) },\n      { emitLoadNextLevel: model.emitLoadNextLevel === true }\n    ) as TreeModel;\n\n    if (isFunction(this.node.loadChildren)) {\n      this._loadChildren = this.node.loadChildren;\n    } else {\n      get(model, 'children', []).forEach((child: TreeModel, index: number) => {\n        this._addChild(new Tree(child, this), index);\n      });\n    }\n\n    if (!Array.isArray(this._children)) {\n      this._children = this.node.loadChildren || isBranch ? [] : null;\n    }\n  }\n\n  public hasDeferredChildren(): boolean {\n    return typeof this._loadChildren === 'function';\n  }\n  /* Setting the children loading state to Loading since a request was dispatched to the client */\n  public loadingChildrenRequested(): void {\n    this._childrenLoadingState = ChildrenLoadingState.Loading;\n  }\n\n  /**\n   * Check whether children of the node are being loaded.\n   * Makes sense only for nodes that define `loadChildren` function.\n   * @returns {boolean} A flag indicating that children are being loaded.\n   */\n  public childrenAreBeingLoaded(): boolean {\n    return this._childrenLoadingState === ChildrenLoadingState.Loading;\n  }\n\n  /**\n   * Check whether children of the node were loaded.\n   * Makes sense only for nodes that define `loadChildren` function.\n   * @returns {boolean} A flag indicating that children were loaded.\n   */\n  public childrenWereLoaded(): boolean {\n    return this._childrenLoadingState === ChildrenLoadingState.Completed;\n  }\n\n  private canLoadChildren(): boolean {\n    return (\n      this._childrenLoadingState === ChildrenLoadingState.NotStarted &&\n      this.foldingType === FoldingType.Expanded &&\n      !!this._loadChildren\n    );\n  }\n\n  /**\n   * Check whether children of the node should be loaded and not loaded yet.\n   * Makes sense only for nodes that define `loadChildren` function.\n   * @returns {boolean} A flag indicating that children should be loaded for the current node.\n   */\n  public childrenShouldBeLoaded(): boolean {\n    return !this.childrenWereLoaded() && (!!this._loadChildren || this.node.emitLoadNextLevel === true);\n  }\n\n  /**\n   * Get children of the current tree.\n   * @returns {Tree[]} The children of the current tree.\n   */\n  public get children(): Tree[] {\n    return this._children;\n  }\n\n  /**\n   * By getting value from this property you start process of loading node's children using `loadChildren` function.\n   * Once children are loaded `loadChildren` function won't be called anymore and loaded for the first time children are emitted in case of subsequent calls.\n   * @returns {Observable<Tree[]>} An observable which emits children once they are loaded.\n   */\n  public get childrenAsync(): Observable<Tree[]> {\n    if (this.canLoadChildren()) {\n      return this._childrenAsyncOnce();\n    }\n    return Observable.of(this.children);\n  }\n\n  /**\n   * By calling this method you start process of loading node's children using `loadChildren` function.\n   */\n  public reloadChildren(): void {\n    if (this.childrenShouldBeLoaded()) {\n      this._childrenLoadingState = ChildrenLoadingState.Loading;\n      this._loadChildren((children: TreeModel[]) => {\n        this._children = children && children.map((child: TreeModel) => new Tree(child, this));\n        this._childrenLoadingState = ChildrenLoadingState.Completed;\n      });\n    }\n  }\n\n  /**\n   * By calling this method you will remove all current children of a treee and create new.\n   */\n  public setChildren(children: Array<TreeModel>): void {\n    this._children = children && children.map((child: TreeModel) => new Tree(child, this));\n    if (this.childrenShouldBeLoaded()) {\n      this._childrenLoadingState = ChildrenLoadingState.Completed;\n    }\n  }\n\n  /**\n   * Create a new node in the current tree.\n   * @param {boolean} isBranch - A flag that indicates whether a new node should be a \"Branch\". \"Leaf\" node will be created by default\n   * @param {TreeModel} model - Tree model of the new node which will be inserted. Empty node will be created by default and it will fire edit mode of this node\n   * @returns {Tree} A newly created child node.\n   */\n  public createNode(isBranch: boolean, model: TreeModel = { value: '' }): Tree {\n    const tree = new Tree(model, this, isBranch);\n    if (!model.id) {\n      tree.markAsNew();\n    }\n\n    tree.id = tree.id || uuidv4();\n\n    if (this.childrenShouldBeLoaded() && !(this.childrenAreBeingLoaded() || this.childrenWereLoaded())) {\n      return null;\n    }\n    if (this.isLeaf()) {\n      return this.addSibling(tree);\n    } else {\n      return this.addChild(tree);\n    }\n  }\n\n  /**\n   * Get the value of the current node\n   * @returns {(string|RenamableNode)} The value of the node.\n   */\n  public get value(): any {\n    return this.node.value;\n  }\n\n  public set checked(checked: boolean) {\n    this.node.settings = Object.assign({}, this.node.settings, { checked });\n  }\n\n  public get checked(): boolean {\n    return !!get(this.node.settings, 'checked');\n  }\n\n  public set checkedIsVisible(checkedIsVisible: boolean) {\n    this.node.settings = Object.assign({}, this.node.settings, { checkedIsVisible });\n  }\n\n  public get checkedIsVisible(): boolean {\n    return !!get(this.node.settings, 'checkedIsVisible');\n  }\n\n  public get checkedChildren(): Tree[] {\n    return this.hasLoadedChildern() ? this.children.filter(child => child.checked) : [];\n  }\n\n  public set selectionAllowed(selectionAllowed: boolean) {\n    this.node.settings = Object.assign({}, this.node.settings, { selectionAllowed });\n  }\n\n  public get selectionAllowed(): boolean {\n    const value = get(this.node.settings, 'selectionAllowed');\n    return isNil(value) ? true : !!value;\n  }\n\n  hasLoadedChildern() {\n    return !isEmpty(this.children);\n  }\n\n  loadedChildrenAmount() {\n    return size(this.children);\n  }\n\n  checkedChildrenAmount() {\n    return size(this.checkedChildren);\n  }\n\n  /**\n   * Set the value of the current node\n   * @param {(string|RenamableNode)} value - The new value of the node.\n   */\n  public set value(value: any) {\n    if (typeof value !== 'string' && !Tree.isRenamable(value)) {\n      return;\n    }\n\n    const stringifiedValue = '' + value;\n    if (Tree.isRenamable(this.value)) {\n      this.node.value = Tree.applyNewValueToRenamable(this.value as RenamableNode, stringifiedValue);\n    } else {\n      this.node.value = Tree.isValueEmpty(stringifiedValue) ? this.node.value : stringifiedValue;\n    }\n  }\n\n  /**\n   * Add a sibling node for the current node. This won't work if the current node is a root.\n   * @param {Tree} sibling - A node that should become a sibling.\n   * @param [number] position - Position in which sibling will be inserted. By default it will be inserted at the last position in a parent.\n   * @returns {Tree} A newly inserted sibling, or null if you are trying to make a sibling for the root.\n   */\n  public addSibling(sibling: Tree, position?: number): Tree {\n    if (Array.isArray(get(this.parent, 'children'))) {\n      return this.parent.addChild(sibling, position);\n    }\n    return null;\n  }\n\n  /**\n   * Add a child node for the current node.\n   * @param {Tree} child - A node that should become a child.\n   * @param [number] position - Position in which child will be inserted. By default it will be inserted at the last position in a parent.\n   * @returns {Tree} A newly inserted child.\n   */\n  public addChild(child: Tree, position?: number): Tree {\n    const newborn = this._addChild(Tree.cloneTreeShallow(child), position);\n\n    this._setFoldingType();\n    if (this.isNodeCollapsed()) {\n      this.switchFoldingType();\n    }\n\n    return newborn;\n  }\n\n  private _addChild(child: Tree, position: number = size(this._children) || 0): Tree {\n    child.parent = this;\n\n    if (Array.isArray(this._children)) {\n      this._children.splice(position, 0, child);\n    } else {\n      this._children = [child];\n    }\n\n    return child;\n  }\n\n  /**\n   * Swap position of the current node with the given sibling. If node passed as a parameter is not a sibling - nothing happens.\n   * @param {Tree} sibling - A sibling with which current node shold be swapped.\n   */\n  public swapWithSibling(sibling: Tree): void {\n    if (!this.hasSibling(sibling)) {\n      return;\n    }\n\n    const siblingIndex = sibling.positionInParent;\n    const thisTreeIndex = this.positionInParent;\n\n    this.parent._children[siblingIndex] = this;\n    this.parent._children[thisTreeIndex] = sibling;\n  }\n\n  /**\n   * Get a node's position in its parent.\n   * @returns {number} The position inside a parent.\n   */\n  public get positionInParent(): number {\n    if (this.isRoot()) {\n      return -1;\n    }\n\n    return this.parent.children ? this.parent.children.indexOf(this) : -1;\n  }\n\n  /**\n   * Check whether or not this tree is static.\n   * @returns {boolean} A flag indicating whether or not this tree is static.\n   */\n  public isStatic(): boolean {\n    return get(this.node.settings, 'static', false);\n  }\n\n  /**\n   * Check whether or not this tree has a left menu.\n   * @returns {boolean} A flag indicating whether or not this tree has a left menu.\n   */\n  public hasLeftMenu(): boolean {\n    return !get(this.node.settings, 'static', false) && get(this.node.settings, 'leftMenu', false);\n  }\n\n  /**\n   * Check whether or not this tree has a right menu.\n   * @returns {boolean} A flag indicating whether or not this tree has a right menu.\n   */\n  public hasRightMenu(): boolean {\n    return !get(this.node.settings, 'static', false) && get(this.node.settings, 'rightMenu', false);\n  }\n\n  /**\n   * Check whether this tree is \"Leaf\" or not.\n   * @returns {boolean} A flag indicating whether or not this tree is a \"Leaf\".\n   */\n  public isLeaf(): boolean {\n    return !this.isBranch();\n  }\n\n  /**\n   * Get menu items of the current tree.\n   * @returns {NodeMenuItem[]} The menu items of the current tree.\n   */\n  public get menuItems(): NodeMenuItem[] {\n    return get(this.node.settings, 'menuItems');\n  }\n\n  /**\n   * Check whether or not this tree has a custom menu.\n   * @returns {boolean} A flag indicating whether or not this tree has a custom menu.\n   */\n  public hasCustomMenu(): boolean {\n    return !this.isStatic() && !!get(this.node.settings, 'menuItems', false);\n  }\n  /**\n   * Check whether this tree is \"Branch\" or not. \"Branch\" is a node that has children.\n   * @returns {boolean} A flag indicating whether or not this tree is a \"Branch\".\n   */\n  public isBranch(): boolean {\n    return this.node.emitLoadNextLevel === true || Array.isArray(this._children);\n  }\n\n  /**\n   * Check whether this tree has children.\n   * @returns {boolean} A flag indicating whether or not this tree has children.\n   */\n  public hasChildren(): boolean {\n    return !isEmpty(this._children) || this.childrenShouldBeLoaded();\n  }\n\n  /**\n   * Check whether this tree is a root or not. The root is the tree (node) that doesn't have parent (or technically its parent is null).\n   * @returns {boolean} A flag indicating whether or not this tree is the root.\n   */\n  public isRoot(): boolean {\n    return isNil(this.parent);\n  }\n\n  /**\n   * Check whether provided tree is a sibling of the current tree. Sibling trees (nodes) are the trees that have the same parent.\n   * @param {Tree} tree - A tree that should be tested on a siblingness.\n   * @returns {boolean} A flag indicating whether or not provided tree is the sibling of the current one.\n   */\n  public hasSibling(tree: Tree): boolean {\n    return !this.isRoot() && includes(this.parent.children, tree);\n  }\n\n  /**\n   * Check whether provided tree is a child of the current tree.\n   * This method tests that provided tree is a <strong>direct</strong> child of the current tree.\n   * @param {Tree} tree - A tree that should be tested (child candidate).\n   * @returns {boolean} A flag indicating whether provided tree is a child or not.\n   */\n  public hasChild(tree: Tree): boolean {\n    return includes(this._children, tree);\n  }\n\n  /**\n   * Remove given tree from the current tree.\n   * The given tree will be removed only in case it is a direct child of the current tree (@see {@link hasChild}).\n   * @param {Tree} tree - A tree that should be removed.\n   */\n  public removeChild(tree: Tree): void {\n    if (!this.hasChildren()) {\n      return;\n    }\n\n    const childIndex = this._children.findIndex((child: Tree) => child === tree);\n    if (childIndex >= 0) {\n      this._children.splice(childIndex, 1);\n    }\n    this._setFoldingType();\n  }\n\n  /**\n   * Remove current tree from its parent.\n   */\n  public removeItselfFromParent(): void {\n    if (!this.parent) {\n      return;\n    }\n\n    this.parent.removeChild(this);\n  }\n\n  /**\n   * Switch folding type of the current tree. \"Leaf\" node cannot switch its folding type cause it doesn't have children, hence nothing to fold.\n   * If node is a \"Branch\" and it is expanded, then by invoking current method state of the tree should be switched to \"collapsed\" and vice versa.\n   */\n  public switchFoldingType(): void {\n    if (this.isLeaf() || !this.hasChildren()) {\n      return;\n    }\n\n    this.disableCollapseOnInit();\n\n    this.node._foldingType = this.isNodeExpanded() ? FoldingType.Collapsed : FoldingType.Expanded;\n  }\n\n  /**\n   * Check that tree is expanded.\n   * @returns {boolean} A flag indicating whether current tree is expanded. Always returns false for the \"Leaf\" tree and for an empty tree.\n   */\n  public isNodeExpanded(): boolean {\n    return this.foldingType === FoldingType.Expanded;\n  }\n\n  /**\n   * Check that tree is collapsed.\n   * @returns {boolean} A flag indicating whether current tree is collapsed. Always returns false for the \"Leaf\" tree and for an empty tree.\n   */\n  public isNodeCollapsed(): boolean {\n    return this.foldingType === FoldingType.Collapsed;\n  }\n\n  /**\n   * Set a current folding type: expanded, collapsed or leaf.\n   */\n  private _setFoldingType(): void {\n    if (this.childrenShouldBeLoaded()) {\n      this.node._foldingType = FoldingType.Collapsed;\n    } else if (this._children && !isEmpty(this._children)) {\n      this.node._foldingType = this.isCollapsedOnInit() ? FoldingType.Collapsed : FoldingType.Expanded;\n    } else if (Array.isArray(this._children)) {\n      this.node._foldingType = FoldingType.Empty;\n    } else {\n      this.node._foldingType = FoldingType.Leaf;\n    }\n  }\n\n  /**\n   * Get a current folding type: expanded, collapsed or leaf.\n   * @returns {FoldingType} A folding type of the current tree.\n   */\n  public get foldingType(): FoldingType {\n    if (!this.node._foldingType) {\n      this._setFoldingType();\n    }\n    return this.node._foldingType;\n  }\n\n  /**\n   * Get a css class for element which displayes folding state - expanded, collapsed or leaf\n   * @returns {string} A string icontaining css class (classes)\n   */\n  public get foldingCssClass(): string {\n    return this.getCssClassesFromSettings() || this.foldingType.cssClass;\n  }\n\n  private getCssClassesFromSettings(): string {\n    if (!this.node._foldingType) {\n      this._setFoldingType();\n    }\n\n    if (this.node._foldingType === FoldingType.Collapsed) {\n      return get(this.node.settings, 'cssClasses.collapsed', null);\n    } else if (this.node._foldingType === FoldingType.Expanded) {\n      return get(this.node.settings, 'cssClasses.expanded', null);\n    } else if (this.node._foldingType === FoldingType.Empty) {\n      return get(this.node.settings, 'cssClasses.empty', null);\n    }\n\n    return get(this.node.settings, 'cssClasses.leaf', null);\n  }\n\n  /**\n   * Get a html template to render before every node's name.\n   * @returns {string} A string representing a html template.\n   */\n  public get nodeTemplate(): string {\n    return this.getTemplateFromSettings();\n  }\n\n  private getTemplateFromSettings(): string {\n    if (this.isLeaf()) {\n      return get(this.node.settings, 'templates.leaf', '');\n    } else {\n      return get(this.node.settings, 'templates.node', '');\n    }\n  }\n\n  /**\n   * Get a html template to render for an element activatin left menu of a node.\n   * @returns {string} A string representing a html template.\n   */\n  public get leftMenuTemplate(): string {\n    if (this.hasLeftMenu()) {\n      return get(this.node.settings, 'templates.leftMenu', '<span></span>');\n    }\n    return '';\n  }\n\n  public disableCollapseOnInit() {\n    if (this.node.settings) {\n      this.node.settings.isCollapsedOnInit = false;\n    }\n  }\n\n  public isCollapsedOnInit() {\n    return !!get(this.node.settings, 'isCollapsedOnInit');\n  }\n\n  public keepNodesInDOM() {\n    return get(this.node.settings, 'keepNodesInDOM');\n  }\n\n  /**\n   * Check that current tree is newly created (added by user via menu for example). Tree that was built from the TreeModel is not marked as new.\n   * @returns {boolean} A flag whether the tree is new.\n   */\n  public isNew(): boolean {\n    return this.node._status === TreeStatus.New;\n  }\n\n  public get id(): number | string {\n    return get(this.node, 'id');\n  }\n\n  public set id(id: number | string) {\n    this.node.id = id;\n  }\n\n  /**\n   * Mark current tree as new (@see {@link isNew}).\n   */\n  public markAsNew(): void {\n    this.node._status = TreeStatus.New;\n  }\n\n  /**\n   * Check that current tree is being renamed (it is in the process of its value renaming initiated by a user).\n   * @returns {boolean} A flag whether the tree is being renamed.\n   */\n  public isBeingRenamed(): boolean {\n    return this.node._status === TreeStatus.IsBeingRenamed;\n  }\n\n  /**\n   * Mark current tree as being renamed (@see {@link isBeingRenamed}).\n   */\n  public markAsBeingRenamed(): void {\n    this.node._status = TreeStatus.IsBeingRenamed;\n  }\n\n  /**\n   * Check that current tree is modified (for example it was renamed).\n   * @returns {boolean} A flag whether the tree is modified.\n   */\n  public isModified(): boolean {\n    return this.node._status === TreeStatus.Modified;\n  }\n\n  /**\n   * Mark current tree as modified (@see {@link isModified}).\n   */\n  public markAsModified(): void {\n    this.node._status = TreeStatus.Modified;\n  }\n\n  /**\n   * Makes a clone of an underlying TreeModel instance\n   * @returns {TreeModel} a clone of an underlying TreeModel instance\n   */\n  public toTreeModel(): TreeModel {\n    const model = defaultsDeep(this.isLeaf() ? {} : { children: [] }, this.node);\n\n    if (this.children) {\n      this.children.forEach(child => {\n        model.children.push(child.toTreeModel());\n      });\n    }\n\n    return model;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree.ts","import { defaultsDeep, get, omit } from './utils/fn.utils';\nimport { NodeMenuItem } from './menu/node-menu.component';\n\nexport class FoldingType {\n  public static Expanded: FoldingType = new FoldingType('node-expanded');\n  public static Collapsed: FoldingType = new FoldingType('node-collapsed');\n  public static Empty: FoldingType = new FoldingType('node-empty');\n  public static Leaf: FoldingType = new FoldingType('node-leaf');\n\n  public constructor(private _cssClass: string) {}\n\n  public get cssClass(): string {\n    return this._cssClass;\n  }\n}\n\nexport type ChildrenLoadingFunction = (callback: (children: TreeModel[]) => void) => void;\n\nexport interface TreeModel {\n  value: string | RenamableNode;\n  id?: string | number;\n  children?: TreeModel[];\n  loadChildren?: ChildrenLoadingFunction;\n  settings?: TreeModelSettings;\n  emitLoadNextLevel?: boolean;\n  _status?: TreeStatus;\n  _foldingType?: FoldingType;\n  [additionalData: string]: any;\n}\n\nexport interface CssClasses {\n  /* The class or classes that should be added to the expanded node */\n  expanded?: string;\n\n  /* The class or classes that should be added to the collapsed node */\n  collapsed?: string;\n\n  /* The class or classes that should be added to the empty node */\n  empty?: string;\n\n  /* The class or classes that should be added to the expanded to the leaf */\n  leaf?: string;\n}\n\nexport interface Templates {\n  /* A template for a node */\n  node?: string;\n\n  /* A template for a leaf node */\n  leaf?: string;\n\n  /* A template for left menu html element */\n  leftMenu?: string;\n}\n\nexport class TreeModelSettings {\n  /* cssClasses - set custom css classes which will be used for a tree */\n  public cssClasses?: CssClasses;\n\n  /* Templates - set custom html templates to be used in a tree */\n  public templates?: Templates;\n\n  /**\n   * \"leftMenu\" property when set to true makes left menu available.\n   * @name TreeModelSettings#leftMenu\n   * @type boolean\n   * @default false\n   */\n  public leftMenu?: boolean;\n\n  /**\n   * \"rightMenu\" property when set to true makes right menu available.\n   * @name TreeModelSettings#rightMenu\n   * @type boolean\n   * @default true\n   */\n  public rightMenu?: boolean;\n\n  /**\n   * \"menu\" property when set will be available as custom context menu.\n   * @name TreeModelSettings#MenuItems\n   * @type NodeMenuItem\n   */\n  public menuItems?: NodeMenuItem[];\n\n  /**\n   * \"static\" property when set to true makes it impossible to drag'n'drop tree or call a menu on it.\n   * @name TreeModelSettings#static\n   * @type boolean\n   * @default false\n   */\n  public static?: boolean;\n\n  public isCollapsedOnInit?: boolean;\n\n  public checked?: boolean;\n\n  public checkedIsVisible?: boolean;\n\n  public selectionAllowed?: boolean;\n\n  public keepNodesInDOM?: boolean;\n\n  public static readonly NOT_CASCADING_SETTINGS = ['selectionAllowed'];\n\n  public static merge(child: TreeModel, parent: TreeModel): TreeModelSettings {\n    const parentCascadingSettings = omit(get(parent, 'settings'), TreeModelSettings.NOT_CASCADING_SETTINGS);\n    return defaultsDeep({}, get(child, 'settings'), parentCascadingSettings, {\n      static: false,\n      leftMenu: false,\n      rightMenu: true,\n      isCollapsedOnInit: false,\n      checked: false,\n      checkedIsVisible: false,\n      keepNodesInDOM: false,\n      selectionAllowed: true\n    });\n  }\n}\n\nexport class Ng2TreeSettings {\n  /**\n   * Indicates root visibility in the tree. When true - root is invisible.\n   * @name Ng2TreeSettings#rootIsVisible\n   * @type boolean\n   */\n  rootIsVisible? = true;\n  showCheckboxes? = false;\n  enableCheckboxes? = true;\n}\n\nexport enum TreeStatus {\n  New,\n  Modified,\n  IsBeingRenamed\n}\n\nexport interface RenamableNode {\n  /**\n   * Set new value of the renamable node. Implementation of this method is up to user.\n   * @param {string} name - A new value of the node.\n   */\n  setName(name: string): void;\n\n  /**\n   * Get string representation of the node. Implementation of this method is up to user.\n   * @returns {string} - A node string representation.\n   */\n  toString(): string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/tree.types.ts","export enum Keys {\n  Escape = 27\n}\n\nexport enum MouseButtons {\n  Left = 0,\n  Right = 2\n}\n\nexport function isLeftButtonClicked(e: MouseEvent): boolean {\n  return e.button === MouseButtons.Left;\n}\n\nexport function isRightButtonClicked(e: MouseEvent): boolean {\n  return e.button === MouseButtons.Right;\n}\n\nexport function isEscapePressed(e: KeyboardEvent): boolean {\n  return e.keyCode === Keys.Escape;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/utils/event.utils.ts","export function isEmpty(value: any[] | string): boolean {\n  if (typeof value === 'string') {\n    return !/\\S/.test(value);\n  }\n\n  if (Array.isArray(value)) {\n    return value.length === 0;\n  }\n\n  return isNil(value);\n}\n\nexport function trim(value: string): string {\n  return isNil(value) ? '' : value.trim();\n}\n\nexport function has(value: any, prop: string): boolean {\n  return value && typeof value === 'object' && value.hasOwnProperty(prop);\n}\n\nexport function isFunction(value: any) {\n  return typeof value === 'function';\n}\n\nexport function get(value: any, path: string, defaultValue?: any) {\n  let result = value;\n\n  for (const prop of path.split('.')) {\n    if (!result || !Reflect.has(result, prop)) {\n      return defaultValue;\n    }\n\n    result = result[prop];\n  }\n\n  return isNil(result) || result === value ? defaultValue : result;\n}\n\nexport function omit(value: any, propsToSkip: string | string[]): any {\n  if (!value) {\n    return value;\n  }\n\n  const normalizedPropsToSkip = typeof propsToSkip === 'string' ? [propsToSkip] : propsToSkip;\n\n  return Object.keys(value).reduce((result, prop) => {\n    if (includes(normalizedPropsToSkip, prop)) {\n      return result;\n    }\n    return Object.assign(result, { [prop]: value[prop] });\n  }, {});\n}\n\nexport function size(value: any[]): number {\n  return isEmpty(value) ? 0 : value.length;\n}\n\nexport function once(fn: Once): Once {\n  let result;\n\n  return (...args: any[]) => {\n    if (fn) {\n      result = fn.apply(null, args);\n      fn = null;\n    }\n    return result;\n  };\n}\n\nexport function defaultsDeep(target: any, ...sources: any[]): any {\n  return [target].concat(sources).reduce((result: any, source: any) => {\n    if (!source) {\n      return result;\n    }\n\n    Object.keys(source).forEach(prop => {\n      if (isNil(result[prop])) {\n        result[prop] = source[prop];\n        return;\n      }\n\n      if (typeof result[prop] === 'object' && !Array.isArray(result[prop])) {\n        result[prop] = defaultsDeep(result[prop], source[prop]);\n        return;\n      }\n    });\n\n    return result;\n  }, {});\n}\n\nexport function includes(target: string | any[], value: any): boolean {\n  if (isNil(target)) {\n    return false;\n  }\n\n  const index = typeof target === 'string' ? target.indexOf(value as string) : target.indexOf(value);\n  return index > -1;\n}\n\nexport function isNil(value: any): boolean {\n  return value === undefined || value === null;\n}\n\nexport type Once = (...args: any[]) => any;\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/utils/fn.utils.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n  public constructor(private sanitizer: DomSanitizer) {}\n\n  public transform(value: string): SafeHtml {\n    // return value;\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/marinaro/Documents/B4YGitHub/ng2-tree/src/utils/safe-html.pipe.ts"],"sourceRoot":"webpack:///"}